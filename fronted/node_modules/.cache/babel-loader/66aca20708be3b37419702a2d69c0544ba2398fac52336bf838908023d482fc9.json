{"ast":null,"code":"var _jsxFileName = \"/Users/jejinan/Desktop/sesac_final/front/fronted/src/components/ChatBot/ChatSessionList.js\",\n  _s = $RefreshSig$();\n/* ChatSessionList.js */\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatSessionList = () => {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  useEffect(() => {\n    //컴포넌트가 처음 마운트될 때 한 번 실행\n    // 백엔드 API 호출: 세션 목록 가져오기\n    fetch('http://localhost:8000/sessions').then(res => res.json()) //첫 번째 .then()은 fetch가 반환한 Promise가 이행(fulfilled)될 때 실행됩니다.\n    .then(data => setSessions(data)) //두 번째 .then()은 JSON 파싱이 완료되어 실제 데이터가 준비되었을 때 실행됩니다.\n    .catch(err => console.error(err)); //체인에 있는 어느 단계에서든 에러가 발생하면, 이 .catch()가 실행되어 에러를 콘솔에 출력합니다.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Sessions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sessions.map(sessionId => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/chat/${sessionId}`,\n          children: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, sessionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatSessionList, \"TH/2S4xpmKAC4lsJs+5/MNwbh30=\");\n_c = ChatSessionList;\nexport default ChatSessionList;\nvar _c;\n$RefreshReg$(_c, \"ChatSessionList\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","ChatSessionList","_s","sessions","setSessions","fetch","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","sessionId","to","_c","$RefreshReg$"],"sources":["/Users/jejinan/Desktop/sesac_final/front/fronted/src/components/ChatBot/ChatSessionList.js"],"sourcesContent":["/* ChatSessionList.js */\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ChatSessionList = () => {\n  const [sessions, setSessions] = useState([]);\n\n  useEffect(() => { //컴포넌트가 처음 마운트될 때 한 번 실행\n    // 백엔드 API 호출: 세션 목록 가져오기\n    fetch('http://localhost:8000/sessions')\n      .then(res => res.json()) //첫 번째 .then()은 fetch가 반환한 Promise가 이행(fulfilled)될 때 실행됩니다.\n      .then(data => setSessions(data)) //두 번째 .then()은 JSON 파싱이 완료되어 실제 데이터가 준비되었을 때 실행됩니다.\n      .catch(err => console.error(err)); //체인에 있는 어느 단계에서든 에러가 발생하면, 이 .catch()가 실행되어 에러를 콘솔에 출력합니다.\n  }, []);\n\n  return (\n    <div>\n      <h2>Chat Sessions</h2>\n      <ul>\n        {sessions.map(sessionId => (\n          <li key={sessionId}>\n            <Link to={`/chat/${sessionId}`}>{sessionId}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ChatSessionList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IAAE;IAChB;IACAS,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CACxBF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC,CAAC;IAAA,CAChCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACgB,GAAG,CAACC,SAAS,iBACrBpB,OAAA;QAAAc,QAAA,eACEd,OAAA,CAACF,IAAI;UAACuB,EAAE,EAAE,SAASD,SAAS,EAAG;UAAAN,QAAA,EAAEM;QAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD3CE,SAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvBID,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAyBrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}