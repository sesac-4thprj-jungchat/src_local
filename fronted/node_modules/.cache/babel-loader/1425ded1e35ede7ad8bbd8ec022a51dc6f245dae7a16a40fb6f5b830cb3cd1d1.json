{"ast":null,"code":"var _jsxFileName = \"/Users/jejinan/Desktop/sesac_final/Fundit_2_6/fronted/src/components/ChatBot/ChatSessionDetail.js\",\n  _s = $RefreshSig$();\n// ChatSessionDetail.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './ChatBot.css';\nimport { handleMicrophoneClick } from '../utils/microphoneHandler';\nimport { setMessage } from '../redux/messageSlice';\nimport useAuthStore from '../context/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatSessionDetail = () => {\n  _s();\n  const {\n    sessionId\n  } = useParams(); // URL에서 sessionId를 추출합니다.\n  const [chatHistory, setChatHistory] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n  const dispatch = useDispatch();\n  const message = useSelector(state => state.message);\n\n  // 정책 데이터를 저장할 상태 추가\n  const [policies, setPolicies] = useState({});\n\n  // 상세 정보 모달을 위한 상태 추가\n  const [selectedPolicy, setSelectedPolicy] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n\n  // 즐겨찾기 상태 관리 \n  const [favorites, setFavorites] = useState([]);\n  // useAuthStore에서 사용자 정보 가져오기\n  const user = useAuthStore.getState().user;\n  const userId = user ? user.user_id : 'guest'; // 로그인 여부에 따라 실제 user_id 또는 'guest' 사용\n\n  // 백엔드에서 해당 세션의 채팅 기록을 불러옵니다.\n  useEffect(() => {\n    console.log(\"useEffect\");\n    fetch(`http://localhost:8000/sessions/${sessionId}`).then(res => res.json()).then(data => {\n      if (data.messages && data.messages.length > 0) {\n        // 타임스탬프와 sender에 따라 메시지를 정렬합니다.\n        console.log(\"메시지 기록 있음\");\n        const sortedMessages = data.messages.sort((a, b) => {\n          return a.timestamp.localeCompare(b.timestamp) || (a.sender === 'user' ? -1 : 1);\n        });\n\n        // 이미 백엔드에서 생성된 메시지 ID 사용\n        setChatHistory(sortedMessages);\n\n        // 정책 정보가 있는 메시지 찾기\n        const policiesData = {};\n        sortedMessages.forEach(msg => {\n          // policies 필드가 있는지 확인하고 message_id 필드를 확인\n          if (msg.policies && msg.message_id) {\n            // 각 정책 항목의 format 일관성 확보 및 모든 상세 정보 포함\n            const formattedPolicies = msg.policies.map(policy => ({\n              // 필수 식별 필드\n              id: policy.id || policy.service_id || \"\",\n              // 원본 서비스ID 우선 사용\n              service_id: policy.service_id || policy.id || \"\",\n              // 서비스ID 필드 사용\n\n              // 기본 정보\n              title: policy.title || \"\",\n              content: policy.content || policy.description || \"\",\n              support_type: policy.support_type || \"\",\n              // 지원 대상 및 내용\n              eligibility: policy.eligibility || \"\",\n              benefits: policy.benefits || \"\",\n              selection_criteria: policy.selection_criteria || \"\",\n              // 신청 관련 정보\n              application_period: policy.application_period || \"\",\n              application_method: policy.application_method || \"\",\n              required_documents: policy.required_documents || \"\",\n              application_office: policy.application_office || \"\",\n              // 문의 및 법령 정보\n              contact_info: policy.contact_info || \"\",\n              legal_basis: policy.legal_basis || \"\",\n              administrative_rule: policy.administrative_rule || \"\",\n              // 추가: 행정규칙\n              local_law: policy.local_law || \"\",\n              // 추가: 자치법규\n\n              // 기관 및 상태 정보\n              responsible_agency: policy.responsible_agency || \"\",\n              // 추가: 소관기관명\n              last_updated: policy.last_updated || \"\",\n              // 추가: 수정일시\n\n              // 링크\n              online_application_url: policy.online_application_url || \"\"\n            }));\n            policiesData[msg.message_id] = formattedPolicies;\n          }\n        });\n        if (Object.keys(policiesData).length > 0) {\n          setPolicies(policiesData);\n        }\n      } else {\n        if (message) {\n          // 메시지를 처리하는 로직\n          console.log(\"처리할 메시지:\", message);\n          sendMessage(message);\n          dispatch(setMessage('')); // Redux 메시지 초기화\n        } else {\n          console.log(\"처리할 메시지 없음\");\n        }\n      }\n    }).catch(err => console.error(err));\n  }, [sessionId, message, dispatch]);\n\n  // 컴포넌트 마운트 시 사용자의 즐겨찾기 목록 가져오기\n  useEffect(() => {\n    fetchUserFavorites();\n  }, [userId]); // userId가 변경될 때마다 즐겨찾기 목록 다시 가져오기\n\n  // 사용자의 즐겨찾기 목록 가져오기\n  const fetchUserFavorites = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/favorites/${userId}`);\n      if (response.ok) {\n        const data = await response.json();\n        // 즐겨찾기된 정책 ID 목록 추출\n        const favoriteIds = data.map(fav => fav.policy_id);\n        setFavorites(favoriteIds);\n      }\n    } catch (error) {\n      console.error(\"즐겨찾기 목록 가져오기 오류:\", error);\n    }\n  };\n\n  // 즐겨찾기 추가/제거 함수\n  const toggleFavorite = async policyId => {\n    try {\n      if (favorites.includes(policyId)) {\n        // 즐겨찾기 제거\n        const response = await fetch(`http://localhost:8000/favorites/${userId}/${policyId}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          setFavorites(prev => prev.filter(id => id !== policyId));\n        }\n      } else {\n        // 즐겨찾기 추가\n        const response = await fetch('http://localhost:8000/favorites', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: userId,\n            policy_id: policyId\n          })\n        });\n        if (response.ok) {\n          setFavorites(prev => [...prev, policyId]);\n        }\n      }\n    } catch (error) {\n      console.error(\"즐겨찾기 토글 오류:\", error);\n    }\n  };\n\n  // 메시지 전송 함수: 백엔드의 /chat 엔드포인트를 호출해 챗봇 응답을 받고,\n  // 사용자와 챗봇 메시지를 백엔드에 저장합니다.\n  const sendMessage = async message => {\n    try {\n      const timestamp = new Date().toISOString();\n      const msg_user = {\n        timestamp,\n        sender: 'user',\n        message: message\n      };\n\n      // 먼저 사용자 메시지를 화면에 추가 (임시 ID로 추가)\n      const tempId = `temp_${Date.now()}`;\n      const tempUserMsg = {\n        ...msg_user,\n        message_id: tempId\n      };\n      setChatHistory(prev => [...prev, tempUserMsg]);\n\n      // 로딩 상태 활성화\n      setIsLoading(true);\n\n      // 백엔드에 사용자 메시지 저장\n      const userMsgResponse = await fetch(`http://localhost:8000/sessions/${sessionId}/message`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(msg_user)\n      });\n\n      // 백엔드로부터 메시지 ID 받기\n      const userMsgData = await userMsgResponse.json();\n\n      // 사용자 메시지 ID 업데이트 (백엔드에서 생성된 ID로)\n      if (userMsgData && userMsgData.message_id) {\n        setChatHistory(prev => prev.map(msg => msg.message_id === tempId ? {\n          ...msg,\n          message_id: userMsgData.message_id\n        } : msg));\n      }\n\n      // 챗봇 응답 요청\n      const response = await fetch('http://localhost:8000/model', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message,\n          session_id: sessionId\n        })\n      });\n      const data = await response.json();\n\n      // 정책 데이터가 있는지 확인 (백엔드 응답 형식에 맞춤)\n      const hasPolicies = data.policies && Array.isArray(data.policies) && data.policies.length > 0;\n      const msg_bot = {\n        timestamp: new Date().toISOString(),\n        sender: 'bot',\n        message: data.response\n      };\n\n      // 백엔드에 챗봇 응답 저장 (정책 정보 포함)\n      const botMsgResponse = await fetch(`http://localhost:8000/sessions/${sessionId}/message`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...msg_bot,\n          policies: hasPolicies ? data.policies : undefined\n        })\n      });\n\n      // 백엔드로부터 메시지 ID 받기\n      const botMsgData = await botMsgResponse.json();\n\n      // 백엔드에서 반환한 message_id 추가\n      if (botMsgData && botMsgData.message_id) {\n        msg_bot.message_id = botMsgData.message_id;\n\n        // 정책 데이터가 있으면 상태에 저장\n        if (hasPolicies) {\n          // 정책 정보의 구조가 backend에서 제공하는 형식과 일치하는지 확인\n          const formattedPolicies = data.policies.map(policy => ({\n            // 필수 식별 필드\n            id: policy.id || policy.service_id || \"\",\n            // 원본 서비스ID 우선 사용\n            service_id: policy.service_id || policy.id || \"\",\n            // 서비스ID 필드 사용\n\n            // 기본 정보\n            title: policy.title || \"\",\n            content: policy.content || policy.description || \"\",\n            support_type: policy.support_type || \"\",\n            // 지원 대상 및 내용\n            eligibility: policy.eligibility || \"\",\n            benefits: policy.benefits || \"\",\n            selection_criteria: policy.selection_criteria || \"\",\n            // 신청 관련 정보\n            application_period: policy.application_period || \"\",\n            application_method: policy.application_method || \"\",\n            required_documents: policy.required_documents || \"\",\n            application_office: policy.application_office || \"\",\n            contact_info: policy.contact_info || \"\",\n            legal_basis: policy.legal_basis || \"\",\n            online_application_url: policy.online_application_url || \"\",\n            administrative_rule: policy.administrative_rule || \"\",\n            // 추가: 행정규칙\n            local_law: policy.local_law || \"\",\n            // 추가: 자치법규\n\n            // 기관 및 상태 정보\n            responsible_agency: policy.responsible_agency || \"\",\n            // 추가: 소관기관명\n            last_updated: policy.last_updated || \"\" // 추가: 수정일시\n          }));\n          setPolicies(prev => ({\n            ...prev,\n            [botMsgData.message_id]: formattedPolicies\n          }));\n        }\n      }\n\n      // 챗봇 응답을 화면에 추가\n      setChatHistory(prev => [...prev.filter(msg => msg.sender !== 'loading'), msg_bot]);\n    } catch (error) {\n      console.error(\"메시지 전송 에러:\", error);\n      // 에러 발생 시 로딩 표시 제거\n      setChatHistory(prev => prev.filter(msg => msg.sender !== 'loading'));\n    } finally {\n      // 로딩 상태 비활성화\n      setIsLoading(false);\n    }\n  };\n\n  // 전송 버튼 클릭 시 처리\n  const handleSend = () => {\n    if (!currentMessage.trim()) return;\n    sendMessage(currentMessage);\n    setCurrentMessage('');\n  };\n  const localHandleMicrophoneClick = () => {\n    setIsRecording(prev => !prev);\n    handleMicrophoneClick(setCurrentMessage, setIsRecording);\n  };\n\n  // 새로운 메시지가 추가되면 스크롤을 자동으로 맨 아래로 이동\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatHistory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-container\",\n          children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 21\n          }, this), msg.sender === 'bot' && msg.message_id && policies[msg.message_id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-list-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uCD94\\uCC9C \\uC815\\uCC45 \\uBAA9\\uB85D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"policy-list\",\n              children: policies[msg.message_id].map((policy, pIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `policy-item ${policy.online_application_url ? 'clickable' : 'not-clickable'}`,\n                onClick: e => {\n                  if (policy.online_application_url) {\n                    window.open(policy.online_application_url, '_blank');\n                  }\n                },\n                \"data-index\": pIndex,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: policy.title || '정책명'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"favorite-button\",\n                    onClick: e => {\n                      e.stopPropagation(); // 이벤트 버블링 방지\n                      // service_id 또는 id를 우선 사용, title은 사용하지 않음\n                      const policyId = policy.service_id || policy.id;\n                      // ID가 존재하는 경우에만 즐겨찾기 토글 수행\n                      if (policyId) {\n                        toggleFavorite(policyId);\n                      } else {\n                        // ID가 없는 경우 알림 (선택적)\n                        console.warn(\"정책 ID가 없어 즐겨찾기를 저장할 수 없습니다.\");\n                      }\n                    },\n                    children: favorites.includes(policy.service_id) || favorites.includes(policy.id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"favorite-icon active\",\n                      children: \"\\u2605\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 37\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"favorite-icon\",\n                      children: \"\\u2606\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"policy-id\",\n                  style: {\n                    fontSize: '12px',\n                    color: '#777',\n                    marginTop: '2px',\n                    marginBottom: '5px'\n                  },\n                  children: [\"\\uC815\\uCC45 ID: \", policy.service_id || policy.id || '정보 없음']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"policy-content\",\n                  children: policy.content || '정책 설명'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 31\n                }, this), policy.eligibility && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-eligibility\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uC9C0\\uC6D0 \\uB300\\uC0C1:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 35\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-with-newlines\",\n                    children: policy.eligibility\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 55\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 33\n                }, this), policy.benefits && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-benefits\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uC9C0\\uC6D0 \\uB0B4\\uC6A9:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 35\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-with-newlines\",\n                    children: policy.benefits\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 55\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"detail-button\",\n                  onClick: e => {\n                    e.stopPropagation(); // 이벤트 버블링 방지\n                    setSelectedPolicy(policy);\n                    setShowDetailModal(true);\n                  },\n                  children: \"\\uC0C1\\uC138 \\uC815\\uBCF4 \\uBCF4\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 31\n                }, this)]\n              }, pIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot dot1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot dot2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot dot3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), showDetailModal && selectedPolicy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"policy-detail-modal-overlay\",\n      onClick: () => setShowDetailModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"policy-detail-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedPolicy.title || '정책 상세 정보'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close-btn\",\n            onClick: () => setShowDetailModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"policy-id\",\n            style: {\n              fontSize: '13px',\n              color: '#777',\n              marginTop: '0px',\n              marginBottom: '10px'\n            },\n            children: [\"\\uC815\\uCC45 ID: \", selectedPolicy.service_id || selectedPolicy.id || '정보 없음']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"policy-content text-with-newlines\",\n            children: selectedPolicy.content || '정책 설명'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), selectedPolicy.support_type && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-support-type\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uC720\\uD615:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.support_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this), selectedPolicy.eligibility && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-eligibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uB300\\uC0C1:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.eligibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this), selectedPolicy.benefits && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-benefits\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uB0B4\\uC6A9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.benefits\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this), selectedPolicy.selection_criteria && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-selection-criteria\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC120\\uC815 \\uAE30\\uC900:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.selection_criteria\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this), selectedPolicy.application_period && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-period\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC2E0\\uCCAD \\uAE30\\uD55C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.application_period\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this), selectedPolicy.application_method && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-method\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC2E0\\uCCAD \\uBC29\\uBC95:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.application_method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this), selectedPolicy.required_documents && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-required-documents\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uAD6C\\uBE44 \\uC11C\\uB958:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.required_documents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), selectedPolicy.application_office && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-office\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC811\\uC218 \\uAE30\\uAD00:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.application_office\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this), selectedPolicy.contact_info && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-contact-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uBB38\\uC758\\uCC98:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.contact_info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this), selectedPolicy.legal_basis && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-legal-basis\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uBC95\\uB839:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.legal_basis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 17\n          }, this), selectedPolicy.administrative_rule && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-administrative-rule\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD589\\uC815\\uADDC\\uCE59:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.administrative_rule\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this), selectedPolicy.local_law && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-local-law\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC790\\uCE58\\uBC95\\uADDC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.local_law\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this), selectedPolicy.responsible_agency && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-responsible-agency\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC18C\\uAD00\\uAE30\\uAD00:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.responsible_agency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, this), selectedPolicy.last_updated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-last-updated\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC218\\uC815\\uC77C\\uC2DC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.last_updated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [selectedPolicy.online_application_url ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"apply-button\",\n              onClick: () => window.open(selectedPolicy.online_application_url, '_blank'),\n              children: \"\\uC628\\uB77C\\uC778 \\uC2E0\\uCCAD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-url-hint modal-hint\",\n              children: \"(\\uC628\\uB77C\\uC778 \\uC2E0\\uCCAD \\uBD88\\uAC00)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-button\",\n              onClick: () => setShowDetailModal(false),\n              children: \"\\uB2EB\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `input-container ${'chat-started'} ${isRecording ? 'recording' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC9C0\\uC6D0\\uAE08\\uC5D0 \\uB300\\uD574 \\uBB34\\uC5C7\\uC774\\uB4E0 \\uC9C8\\uBB38\\uD558\\uC138\\uC694!\",\n        value: currentMessage,\n        onChange: e => setCurrentMessage(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.nativeEvent.isComposing) {\n            e.preventDefault(); // 기본 동작(예: 폼 제출) 방지\n            if (!e.repeat) {\n              // 키 이벤트가 반복되지 않은 경우에만 처리\n              handleSend();\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `microphone-button ${isRecording ? 'recording' : ''}`,\n        onClick: localHandleMicrophoneClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatSessionDetail, \"LWjiV/p1/Mr7a2tFjWYnmr0fO7I=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = ChatSessionDetail;\nexport default ChatSessionDetail;\nvar _c;\n$RefreshReg$(_c, \"ChatSessionDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","ReactMarkdown","useSelector","useDispatch","handleMicrophoneClick","setMessage","useAuthStore","jsxDEV","_jsxDEV","ChatSessionDetail","_s","sessionId","chatHistory","setChatHistory","currentMessage","setCurrentMessage","messagesEndRef","isRecording","setIsRecording","isLoading","setIsLoading","dispatch","message","state","policies","setPolicies","selectedPolicy","setSelectedPolicy","showDetailModal","setShowDetailModal","favorites","setFavorites","user","getState","userId","user_id","console","log","fetch","then","res","json","data","messages","length","sortedMessages","sort","a","b","timestamp","localeCompare","sender","policiesData","forEach","msg","message_id","formattedPolicies","map","policy","id","service_id","title","content","description","support_type","eligibility","benefits","selection_criteria","application_period","application_method","required_documents","application_office","contact_info","legal_basis","administrative_rule","local_law","responsible_agency","last_updated","online_application_url","Object","keys","sendMessage","catch","err","error","fetchUserFavorites","response","ok","favoriteIds","fav","policy_id","toggleFavorite","policyId","includes","method","prev","filter","headers","body","JSON","stringify","Date","toISOString","msg_user","tempId","now","tempUserMsg","userMsgResponse","userMsgData","session_id","hasPolicies","Array","isArray","msg_bot","botMsgResponse","undefined","botMsgData","handleSend","trim","localHandleMicrophoneClick","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","pIndex","onClick","e","window","open","stopPropagation","warn","style","fontSize","color","marginTop","marginBottom","ref","type","placeholder","value","onChange","target","onKeyDown","key","nativeEvent","isComposing","preventDefault","repeat","_c","$RefreshReg$"],"sources":["/Users/jejinan/Desktop/sesac_final/Fundit_2_6/fronted/src/components/ChatBot/ChatSessionDetail.js"],"sourcesContent":["// ChatSessionDetail.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './ChatBot.css';\nimport { handleMicrophoneClick } from '../utils/microphoneHandler';\nimport { setMessage } from '../redux/messageSlice';\nimport useAuthStore from '../context/authStore';\n\nconst ChatSessionDetail = () => {\n  const { sessionId } = useParams(); // URL에서 sessionId를 추출합니다.\n  const [chatHistory, setChatHistory] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n  const dispatch = useDispatch();\n  const message = useSelector(state => state.message);\n  \n  // 정책 데이터를 저장할 상태 추가\n  const [policies, setPolicies] = useState({});\n  \n  // 상세 정보 모달을 위한 상태 추가\n  const [selectedPolicy, setSelectedPolicy] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n\n  // 즐겨찾기 상태 관리 \n  const [favorites, setFavorites] = useState([]);\n  // useAuthStore에서 사용자 정보 가져오기\n  const user = useAuthStore.getState().user;\n  const userId = user ? user.user_id : 'guest'; // 로그인 여부에 따라 실제 user_id 또는 'guest' 사용\n\n  // 백엔드에서 해당 세션의 채팅 기록을 불러옵니다.\n  useEffect(() => {\n    console.log(\"useEffect\");\n    fetch(`http://localhost:8000/sessions/${sessionId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.messages && data.messages.length > 0) {\n          // 타임스탬프와 sender에 따라 메시지를 정렬합니다.\n          console.log(\"메시지 기록 있음\");\n          const sortedMessages = data.messages.sort((a, b) => {\n            return a.timestamp.localeCompare(b.timestamp) || (a.sender === 'user' ? -1 : 1);\n          });\n\n          // 이미 백엔드에서 생성된 메시지 ID 사용\n          setChatHistory(sortedMessages);\n\n          // 정책 정보가 있는 메시지 찾기\n          const policiesData = {};\n          sortedMessages.forEach(msg => {\n            // policies 필드가 있는지 확인하고 message_id 필드를 확인\n            if (msg.policies && msg.message_id) {\n              // 각 정책 항목의 format 일관성 확보 및 모든 상세 정보 포함\n              const formattedPolicies = msg.policies.map(policy => ({\n                // 필수 식별 필드\n                id: policy.id || policy.service_id || \"\",  // 원본 서비스ID 우선 사용\n                service_id: policy.service_id || policy.id || \"\",  // 서비스ID 필드 사용\n                \n                // 기본 정보\n                title: policy.title || \"\",\n                content: policy.content || policy.description || \"\",\n                support_type: policy.support_type || \"\",\n                \n                // 지원 대상 및 내용\n                eligibility: policy.eligibility || \"\",\n                benefits: policy.benefits || \"\",\n                selection_criteria: policy.selection_criteria || \"\",\n                \n                // 신청 관련 정보\n                application_period: policy.application_period || \"\",\n                application_method: policy.application_method || \"\",\n                required_documents: policy.required_documents || \"\",\n                application_office: policy.application_office || \"\",\n                \n                // 문의 및 법령 정보\n                contact_info: policy.contact_info || \"\",\n                legal_basis: policy.legal_basis || \"\",\n                administrative_rule: policy.administrative_rule || \"\",  // 추가: 행정규칙\n                local_law: policy.local_law || \"\",  // 추가: 자치법규\n                \n                // 기관 및 상태 정보\n                responsible_agency: policy.responsible_agency || \"\",  // 추가: 소관기관명\n                last_updated: policy.last_updated || \"\",  // 추가: 수정일시\n                \n                // 링크\n                online_application_url: policy.online_application_url || \"\",\n  \n              }));\n              \n              policiesData[msg.message_id] = formattedPolicies;\n            }\n          });\n          \n          if (Object.keys(policiesData).length > 0) {\n            setPolicies(policiesData);\n          }\n        } \n        else {\n          if (message) {\n            // 메시지를 처리하는 로직\n            console.log(\"처리할 메시지:\", message);\n            sendMessage(message);\n            dispatch(setMessage('')); // Redux 메시지 초기화\n          }\n          else {\n            console.log(\"처리할 메시지 없음\");\n          }\n        } \n      })\n      .catch((err) => console.error(err));\n  }, [sessionId, message, dispatch]);\n\n  // 컴포넌트 마운트 시 사용자의 즐겨찾기 목록 가져오기\n  useEffect(() => {\n    fetchUserFavorites();\n  }, [userId]); // userId가 변경될 때마다 즐겨찾기 목록 다시 가져오기\n\n  // 사용자의 즐겨찾기 목록 가져오기\n  const fetchUserFavorites = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/favorites/${userId}`);\n      if (response.ok) {\n        const data = await response.json();\n        // 즐겨찾기된 정책 ID 목록 추출\n        const favoriteIds = data.map(fav => fav.policy_id);\n        setFavorites(favoriteIds);\n      }\n    } catch (error) {\n      console.error(\"즐겨찾기 목록 가져오기 오류:\", error);\n    }\n  };\n\n  // 즐겨찾기 추가/제거 함수\n  const toggleFavorite = async (policyId) => {\n    try {\n      if (favorites.includes(policyId)) {\n        // 즐겨찾기 제거\n        const response = await fetch(`http://localhost:8000/favorites/${userId}/${policyId}`, {\n          method: 'DELETE'\n        });\n        \n        if (response.ok) {\n          setFavorites(prev => prev.filter(id => id !== policyId));\n        }\n      } else {\n        // 즐겨찾기 추가\n        const response = await fetch('http://localhost:8000/favorites', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: userId,\n            policy_id: policyId\n          })\n        });\n        \n        if (response.ok) {\n          setFavorites(prev => [...prev, policyId]);\n        }\n      }\n    } catch (error) {\n      console.error(\"즐겨찾기 토글 오류:\", error);\n    }\n  };\n\n  // 메시지 전송 함수: 백엔드의 /chat 엔드포인트를 호출해 챗봇 응답을 받고,\n  // 사용자와 챗봇 메시지를 백엔드에 저장합니다.\n  const sendMessage = async (message) => {\n    try {\n      const timestamp = new Date().toISOString();\n      const msg_user = { timestamp, sender: 'user', message: message };\n      \n      // 먼저 사용자 메시지를 화면에 추가 (임시 ID로 추가)\n      const tempId = `temp_${Date.now()}`;\n      const tempUserMsg = { ...msg_user, message_id: tempId };\n      setChatHistory((prev) => [...prev, tempUserMsg]);\n      \n      // 로딩 상태 활성화\n      setIsLoading(true);\n      \n      // 백엔드에 사용자 메시지 저장\n      const userMsgResponse = await fetch(`http://localhost:8000/sessions/${sessionId}/message`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(msg_user),\n      });\n      \n      // 백엔드로부터 메시지 ID 받기\n      const userMsgData = await userMsgResponse.json();\n      \n      // 사용자 메시지 ID 업데이트 (백엔드에서 생성된 ID로)\n      if (userMsgData && userMsgData.message_id) {\n        setChatHistory(prev => \n          prev.map(msg => \n            msg.message_id === tempId \n              ? { ...msg, message_id: userMsgData.message_id } \n              : msg\n          )\n        );\n      }\n      \n      // 챗봇 응답 요청\n      const response = await fetch('http://localhost:8000/model', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n           message,\n           session_id: sessionId,\n          }),\n      });\n      const data = await response.json();\n      \n      // 정책 데이터가 있는지 확인 (백엔드 응답 형식에 맞춤)\n      const hasPolicies = data.policies && Array.isArray(data.policies) && data.policies.length > 0;\n      \n      const msg_bot = { \n        timestamp: new Date().toISOString(), \n        sender: 'bot', \n        message: data.response\n      };\n      \n      // 백엔드에 챗봇 응답 저장 (정책 정보 포함)\n      const botMsgResponse = await fetch(`http://localhost:8000/sessions/${sessionId}/message`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          ...msg_bot,\n          policies: hasPolicies ? data.policies : undefined\n        }),\n      });\n      \n      // 백엔드로부터 메시지 ID 받기\n      const botMsgData = await botMsgResponse.json();\n      \n      // 백엔드에서 반환한 message_id 추가\n      if (botMsgData && botMsgData.message_id) {\n        msg_bot.message_id = botMsgData.message_id;\n        \n        // 정책 데이터가 있으면 상태에 저장\n        if (hasPolicies) {\n          // 정책 정보의 구조가 backend에서 제공하는 형식과 일치하는지 확인\n          const formattedPolicies = data.policies.map(policy => ({\n            // 필수 식별 필드\n            id: policy.id || policy.service_id || \"\",  // 원본 서비스ID 우선 사용\n            service_id: policy.service_id || policy.id || \"\",  // 서비스ID 필드 사용\n            \n            // 기본 정보\n            title: policy.title || \"\",\n            content: policy.content || policy.description || \"\",\n            support_type: policy.support_type || \"\",\n            \n            // 지원 대상 및 내용\n            eligibility: policy.eligibility || \"\",\n            benefits: policy.benefits || \"\",\n            selection_criteria: policy.selection_criteria || \"\",\n            \n            // 신청 관련 정보\n            application_period: policy.application_period || \"\",\n            application_method: policy.application_method || \"\",\n            required_documents: policy.required_documents || \"\",\n            application_office: policy.application_office || \"\",\n            contact_info: policy.contact_info || \"\",\n            legal_basis: policy.legal_basis || \"\",\n            online_application_url: policy.online_application_url || \"\",\n            administrative_rule: policy.administrative_rule || \"\",  // 추가: 행정규칙\n            local_law: policy.local_law || \"\",  // 추가: 자치법규\n            \n            // 기관 및 상태 정보\n            responsible_agency: policy.responsible_agency || \"\",  // 추가: 소관기관명\n            last_updated: policy.last_updated || \"\",  // 추가: 수정일시\n          }));\n          \n          setPolicies(prev => ({\n            ...prev,\n            [botMsgData.message_id]: formattedPolicies\n          }));\n        }\n      }\n  \n      // 챗봇 응답을 화면에 추가\n      setChatHistory((prev) => [...prev.filter(msg => msg.sender !== 'loading'), msg_bot]);\n  \n    } catch (error) {\n      console.error(\"메시지 전송 에러:\", error);\n      // 에러 발생 시 로딩 표시 제거\n      setChatHistory((prev) => prev.filter(msg => msg.sender !== 'loading'));\n    } finally {\n      // 로딩 상태 비활성화\n      setIsLoading(false);\n    }\n  };\n  \n  // 전송 버튼 클릭 시 처리\n  const handleSend = () => {\n    if (!currentMessage.trim()) return;\n    sendMessage(currentMessage);\n    setCurrentMessage('');\n  };\n\n  const localHandleMicrophoneClick = () => {\n    setIsRecording(prev => !prev);\n    handleMicrophoneClick(setCurrentMessage, setIsRecording);\n  };\n\n  // 새로운 메시지가 추가되면 스크롤을 자동으로 맨 아래로 이동\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [chatHistory]);\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"messages\">\n        {chatHistory.map((msg, index) => (\n            <div key={index} className={`message ${msg.sender}`}>\n                <div className=\"message-container\">\n                    <ReactMarkdown>{msg.message}</ReactMarkdown>\n                    \n                    {/* 봇 메시지이고 정책 목록이 있을 경우 정책 목록 UI 표시 */}\n                    {msg.sender === 'bot' && msg.message_id && policies[msg.message_id] && (\n                      <div className=\"policy-list-container\">\n                        <h4>추천 정책 목록</h4>\n                        <div className=\"policy-list\">\n                          {policies[msg.message_id].map((policy, pIndex) => (\n                            <div \n                              key={pIndex} \n                              className={`policy-item ${policy.online_application_url ? 'clickable' : 'not-clickable'}`}\n                              onClick={(e) => {\n                                if (policy.online_application_url) {\n                                  window.open(policy.online_application_url, '_blank');\n                                }\n                              }}\n                              data-index={pIndex}\n                            >\n                              <div className=\"policy-header\">\n                                <h5>{policy.title || '정책명'}</h5>\n                                <button \n                                  className=\"favorite-button\" \n                                  onClick={(e) => {\n                                    e.stopPropagation(); // 이벤트 버블링 방지\n                                    // service_id 또는 id를 우선 사용, title은 사용하지 않음\n                                    const policyId = policy.service_id || policy.id;\n                                    // ID가 존재하는 경우에만 즐겨찾기 토글 수행\n                                    if (policyId) {\n                                      toggleFavorite(policyId);\n                                    } else {\n                                      // ID가 없는 경우 알림 (선택적)\n                                      console.warn(\"정책 ID가 없어 즐겨찾기를 저장할 수 없습니다.\");\n                                    }\n                                  }}\n                                >\n                                  {favorites.includes(policy.service_id) || favorites.includes(policy.id) ? \n                                    <span className=\"favorite-icon active\">★</span> : \n                                    <span className=\"favorite-icon\">☆</span>\n                                  }\n                                </button>\n                              </div>\n                              <p className=\"policy-id\" style={{ fontSize: '12px', color: '#777', marginTop: '2px', marginBottom: '5px' }}>\n                                정책 ID: {policy.service_id || policy.id || '정보 없음'}\n                              </p>\n                              <p className=\"policy-content\">{policy.content || '정책 설명'}</p>\n                              {policy.eligibility && (\n                                <div className=\"policy-eligibility\">\n                                  <span>지원 대상:</span> <span className=\"text-with-newlines\">{policy.eligibility}</span>\n                                </div>\n                              )}\n                              {policy.benefits && (\n                                <div className=\"policy-benefits\">\n                                  <span>지원 내용:</span> <span className=\"text-with-newlines\">{policy.benefits}</span>\n                                </div>\n                              )}\n                              \n                              <button \n                                className=\"detail-button\"\n                                onClick={(e) => {\n                                  e.stopPropagation(); // 이벤트 버블링 방지\n                                  setSelectedPolicy(policy);\n                                  setShowDetailModal(true);\n                                }}\n                              >\n                                상세 정보 보기\n                              </button>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                </div>\n            </div>\n        ))}\n        {isLoading && (\n          <div className=\"message bot loading\">\n            <div className=\"message-container\">\n              <div className=\"loading-indicator\">\n                <div className=\"dot dot1\"></div>\n                <div className=\"dot dot2\"></div>\n                <div className=\"dot dot3\"></div>\n              </div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* 상세 정보 모달 */}\n      {showDetailModal && selectedPolicy && (\n        <div className=\"policy-detail-modal-overlay\" onClick={() => setShowDetailModal(false)}>\n          <div className=\"policy-detail-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>{selectedPolicy.title || '정책 상세 정보'}</h3>\n              <button className=\"modal-close-btn\" onClick={() => setShowDetailModal(false)}>×</button>\n            </div>\n            <div className=\"modal-content\">\n              <p className=\"policy-id\" style={{ fontSize: '13px', color: '#777', marginTop: '0px', marginBottom: '10px' }}>\n                정책 ID: {selectedPolicy.service_id || selectedPolicy.id || '정보 없음'}\n              </p>\n              <p className=\"policy-content text-with-newlines\">{selectedPolicy.content || '정책 설명'}</p>\n              \n              {selectedPolicy.support_type && (\n                <div className=\"policy-support-type\">\n                  <span>지원 유형:</span> <span className=\"text-with-newlines\">{selectedPolicy.support_type}</span>\n                </div>\n              )}\n              {selectedPolicy.eligibility && (\n                <div className=\"policy-eligibility\">\n                  <span>지원 대상:</span> <span className=\"text-with-newlines\">{selectedPolicy.eligibility}</span>\n                </div>\n              )}\n              {selectedPolicy.benefits && (\n                <div className=\"policy-benefits\">\n                  <span>지원 내용:</span> <span className=\"text-with-newlines\">{selectedPolicy.benefits}</span>\n                </div>\n              )}\n              {selectedPolicy.selection_criteria && (\n                <div className=\"policy-selection-criteria\">\n                  <span>선정 기준:</span> <span className=\"text-with-newlines\">{selectedPolicy.selection_criteria}</span>\n                </div>\n              )}\n              {selectedPolicy.application_period && (\n                <div className=\"policy-application-period\">\n                  <span>신청 기한:</span> <span className=\"text-with-newlines\">{selectedPolicy.application_period}</span>\n                </div>\n              )}\n              {selectedPolicy.application_method && (\n                <div className=\"policy-application-method\">\n                  <span>신청 방법:</span> <span className=\"text-with-newlines\">{selectedPolicy.application_method}</span>\n                </div>\n              )}\n              {selectedPolicy.required_documents && (\n                <div className=\"policy-required-documents\">\n                  <span>구비 서류:</span> <span className=\"text-with-newlines\">{selectedPolicy.required_documents}</span>\n                </div>\n              )}\n              {selectedPolicy.application_office && (\n                <div className=\"policy-application-office\">\n                  <span>접수 기관:</span> <span className=\"text-with-newlines\">{selectedPolicy.application_office}</span>\n                </div>\n              )}\n              {selectedPolicy.contact_info && (\n                <div className=\"policy-contact-info\">\n                  <span>문의처:</span> <span className=\"text-with-newlines\">{selectedPolicy.contact_info}</span>\n                </div>\n              )}\n              {selectedPolicy.legal_basis && (\n                <div className=\"policy-legal-basis\">\n                  <span>법령:</span> <span className=\"text-with-newlines\">{selectedPolicy.legal_basis}</span>\n                </div>\n              )}\n              {/* 새로 추가된 필드들 */}\n              {selectedPolicy.administrative_rule && (\n                <div className=\"policy-administrative-rule\">\n                  <span>행정규칙:</span> <span className=\"text-with-newlines\">{selectedPolicy.administrative_rule}</span>\n                </div>\n              )}\n              {selectedPolicy.local_law && (\n                <div className=\"policy-local-law\">\n                  <span>자치법규:</span> <span className=\"text-with-newlines\">{selectedPolicy.local_law}</span>\n                </div>\n              )}\n              {selectedPolicy.responsible_agency && (\n                <div className=\"policy-responsible-agency\">\n                  <span>소관기관:</span> <span className=\"text-with-newlines\">{selectedPolicy.responsible_agency}</span>\n                </div>\n              )}\n              {selectedPolicy.last_updated && (\n                <div className=\"policy-last-updated\">\n                  <span>수정일시:</span> <span className=\"text-with-newlines\">{selectedPolicy.last_updated}</span>\n                </div>\n              )}\n              \n              <div className=\"modal-footer\">\n                {selectedPolicy.online_application_url ? (\n                  <button \n                    className=\"apply-button\"\n                    onClick={() => window.open(selectedPolicy.online_application_url, '_blank')}\n                  >\n                    온라인 신청하기\n                  </button>\n                ) : (\n                  <p className=\"no-url-hint modal-hint\">(온라인 신청 불가)</p>\n                )}\n                <button \n                  className=\"close-button\"\n                  onClick={() => setShowDetailModal(false)}\n                >\n                  닫기\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className={`input-container ${'chat-started'} ${isRecording ? 'recording' : ''}`}>\n        <input\n          type=\"text\"\n          placeholder=\"지원금에 대해 무엇이든 질문하세요!\"\n          value={currentMessage}\n          onChange={(e) => setCurrentMessage(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && !e.nativeEvent.isComposing) {\n              e.preventDefault(); // 기본 동작(예: 폼 제출) 방지\n              if (!e.repeat) {    // 키 이벤트가 반복되지 않은 경우에만 처리\n                handleSend();\n              }\n            }\n          }}\n        />\n        <button className=\"send-button\" onClick={handleSend}>전송</button>\n        <button \n          className={`microphone-button ${isRecording ? 'recording' : ''}`} \n          onClick={localHandleMicrophoneClick}\n        ></button>      \n      </div>\n    </div>\n  );\n};\n\nexport default ChatSessionDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}