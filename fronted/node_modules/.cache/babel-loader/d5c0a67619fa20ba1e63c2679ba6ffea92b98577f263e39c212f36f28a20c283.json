{"ast":null,"code":"var _jsxFileName = \"/Users/jejinan/Desktop/sesac_final/front/fronted/src/components/ChatBot/ChatSessionList.js\",\n  _s = $RefreshSig$();\n/* ChatSessionList.js */\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport useAuthStore from '../context/authStore';\nimport { setSessions } from '../redux/sessionSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatSessionList = () => {\n  _s();\n  const sessions = useSelector(state => state.sessions);\n  const dispatch = useDispatch();\n  const user = useAuthStore.getState().user;\n  useEffect(() => {\n    const fetchSessions = async () => {\n      try {\n        const res = await fetch(`http://localhost:8000/sessions?user_id=${user.user_id}`);\n        const data = await res.json();\n        dispatch(setSessions(data)); // Redux 상태 업데이트\n      } catch (error) {\n        console.error(\"세션 목록 로딩 에러:\", error);\n      }\n    };\n    fetchSessions();\n  }, [dispatch, user.user_id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"session-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"session-list\",\n      children: sessions.map(session => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/chat/${session.sessionId}`,\n        className: \"session-item\",\n        children: session.header_message.substring(0, 20)\n      }, session.sessionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatSessionList, \"qd5WdhKUe8TuwYSAkbMvvCcOXZE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ChatSessionList;\nexport default ChatSessionList;\nvar _c;\n$RefreshReg$(_c, \"ChatSessionList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","Link","useAuthStore","setSessions","jsxDEV","_jsxDEV","ChatSessionList","_s","sessions","state","dispatch","user","getState","fetchSessions","res","fetch","user_id","data","json","error","console","className","children","map","session","to","sessionId","header_message","substring","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jejinan/Desktop/sesac_final/front/fronted/src/components/ChatBot/ChatSessionList.js"],"sourcesContent":["/* ChatSessionList.js */\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport useAuthStore from '../context/authStore';\nimport { setSessions } from '../redux/sessionSlice';\n\nconst ChatSessionList = () => {\n  const sessions = useSelector(state => state.sessions);\n  const dispatch = useDispatch();\n  const user = useAuthStore.getState().user;\n\n  useEffect(() => {\n    const fetchSessions = async () => {\n      try {\n        const res = await fetch(`http://localhost:8000/sessions?user_id=${user.user_id}`);\n        const data = await res.json();\n        dispatch(setSessions(data)); // Redux 상태 업데이트\n      } catch (error) {\n        console.error(\"세션 목록 로딩 에러:\", error);\n      }\n    };\n\n    fetchSessions();\n  }, [dispatch, user.user_id]);\n\n  return (\n    <div className=\"session-list-container\">\n      {/* <h2>Chat Sessions</h2> */}\n      <ul className=\"session-list\">\n        {sessions.map(session => (\n          <Link \n            to={`/chat/${session.sessionId}`} \n            key={session.sessionId} \n            className=\"session-item\"\n          >\n            {session.header_message.substring(0, 20)}\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ChatSessionList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAASC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EACrD,MAAME,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,IAAI,GAAGT,YAAY,CAACU,QAAQ,CAAC,CAAC,CAACD,IAAI;EAEzCb,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0CJ,IAAI,CAACK,OAAO,EAAE,CAAC;QACjF,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BR,QAAQ,CAACP,WAAW,CAACc,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC;IAEDN,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,QAAQ,EAAEC,IAAI,CAACK,OAAO,CAAC,CAAC;EAE5B,oBACEX,OAAA;IAAKgB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eAErCjB,OAAA;MAAIgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzBd,QAAQ,CAACe,GAAG,CAACC,OAAO,iBACnBnB,OAAA,CAACJ,IAAI;QACHwB,EAAE,EAAE,SAASD,OAAO,CAACE,SAAS,EAAG;QAEjCL,SAAS,EAAC,cAAc;QAAAC,QAAA,EAEvBE,OAAO,CAACG,cAAc,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE;MAAC,GAHnCJ,OAAO,CAACE,SAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnCID,eAAe;EAAA,QACFP,WAAW,EACXC,WAAW;AAAA;AAAAiC,EAAA,GAFxB3B,eAAe;AAqCrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}