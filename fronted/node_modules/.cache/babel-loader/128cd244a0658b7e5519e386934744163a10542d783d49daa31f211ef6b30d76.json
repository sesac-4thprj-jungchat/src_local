{"ast":null,"code":"import { create } from \"zustand\";\nimport axios from \"axios\";\nconst useAuthStore = create(set => ({\n  user: null,\n  // 로그인 상태 확인\n  fetchUser: async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/me\", {\n        withCredentials: true\n      });\n      set({\n        user: res.data.user\n      });\n    } catch {\n      set({\n        user: null\n      });\n    }\n  },\n  // 로그인 요청\n  login: async (user_id, password) => {\n    try {\n      const res = await axios.post(\"http://localhost:8000/login\", {\n        user_id,\n        password\n      }, {\n        withCredentials: true\n      });\n      set({\n        user: res.data.user\n      });\n      return true;\n    } catch {\n      return false;\n    }\n  },\n  // 로그아웃 요청\n  logout: async () => {\n    try {\n      await axios.get(\"http://localhost:8000/logout\", {\n        withCredentials: true\n      });\n      set({\n        user: null\n      });\n    } catch {\n      console.error(\"로그아웃 실패\");\n    }\n  }\n}));\nexport default useAuthStore;","map":{"version":3,"names":["create","axios","useAuthStore","set","user","fetchUser","res","get","withCredentials","data","login","user_id","password","post","logout","console","error"],"sources":["/home/elicer/Fundit_2.1/fronted/src/components/context/authStore.js"],"sourcesContent":["import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst useAuthStore = create((set) => ({\n  user: null,\n\n  // 로그인 상태 확인\n  fetchUser: async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/me\", {\n        withCredentials: true,\n      });\n      set({ user: res.data.user });\n    } catch {\n      set({ user: null });\n    }\n  },\n\n  // 로그인 요청\n  login: async (user_id, password) => {\n    try {\n      const res = await axios.post(\n        \"http://localhost:8000/login\",\n        { user_id, password },\n        { withCredentials: true }\n      );\n      set({ user: res.data.user });\n      return true;\n    } catch {\n      return false;\n    }\n  },\n\n  // 로그아웃 요청\n  logout: async () => {\n    try {\n      await axios.get(\"http://localhost:8000/logout\", {\n        withCredentials: true,\n      });\n      set({ user: null });\n    } catch {\n      console.error(\"로그아웃 실패\");\n    }\n  },\n}));\n\nexport default useAuthStore;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGF,MAAM,CAAEG,GAAG,KAAM;EACpCC,IAAI,EAAE,IAAI;EAEV;EACAC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,0BAA0B,EAAE;QACtDC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFL,GAAG,CAAC;QAAEC,IAAI,EAAEE,GAAG,CAACG,IAAI,CAACL;MAAK,CAAC,CAAC;IAC9B,CAAC,CAAC,MAAM;MACND,GAAG,CAAC;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;IACrB;EACF,CAAC;EAED;EACAM,KAAK,EAAE,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,KAAK;IAClC,IAAI;MACF,MAAMN,GAAG,GAAG,MAAML,KAAK,CAACY,IAAI,CAC1B,6BAA6B,EAC7B;QAAEF,OAAO;QAAEC;MAAS,CAAC,EACrB;QAAEJ,eAAe,EAAE;MAAK,CAC1B,CAAC;MACDL,GAAG,CAAC;QAAEC,IAAI,EAAEE,GAAG,CAACG,IAAI,CAACL;MAAK,CAAC,CAAC;MAC5B,OAAO,IAAI;IACb,CAAC,CAAC,MAAM;MACN,OAAO,KAAK;IACd;EACF,CAAC;EAED;EACAU,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAMb,KAAK,CAACM,GAAG,CAAC,8BAA8B,EAAE;QAC9CC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFL,GAAG,CAAC;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;IACrB,CAAC,CAAC,MAAM;MACNW,OAAO,CAACC,KAAK,CAAC,SAAS,CAAC;IAC1B;EACF;AACF,CAAC,CAAC,CAAC;AAEH,eAAed,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}