{"ast":null,"code":"var _jsxFileName = \"/home/elicer/Fundit_2.1/fronted/src/components/PolicyCalendar/PolicyCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PolicyCalendar.css';\nimport logo from './fundint.svg';\nimport useAuthStore from '../context/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PolicyCalendar = () => {\n  _s();\n  // 현재 날짜 정보\n  const currentDate = new Date();\n  const [currentYear, setCurrentYear] = useState(currentDate.getFullYear());\n  const [currentMonth, setCurrentMonth] = useState(currentDate.getMonth());\n  const currentDay = currentDate.getDate();\n\n  // 정책 데이터 및 즐겨찾기 상태\n  const [allPolicies, setAllPolicies] = useState([]); // 모든 정책 데이터 저장\n  const [policies, setPolicies] = useState([]);\n  const [events, setEvents] = useState({});\n  const [policyPeriods, setPolicyPeriods] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [dataFetched, setDataFetched] = useState(false); // 데이터 로딩 여부 추적\n\n  // 상세 정보 모달을 위한 상태 추가\n  const [selectedPolicy, setSelectedPolicy] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n\n  // 사용자 정보 - Redux 대신 Zustand 사용\n  const user = useAuthStore(state => state.user);\n  const userId = user ? user.user_id : 'guest';\n  const monthNames = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n  const weekdayNames = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\n  // 정책 데이터로부터 현재 월에 해당하는 정책 및 이벤트 생성 함수\n  const updateCalendarData = useCallback(() => {\n    if (allPolicies.length === 0) return;\n\n    // 모든 정책 표시 (필터링 없이)\n    setPolicies(allPolicies);\n\n    // 정책 기간 정보 및 이벤트 생성\n    const periodsData = {};\n    const eventsData = {};\n    allPolicies.forEach(policy => {\n      // 날짜 정보가 있는 경우에만 처리\n      if (policy.startDate && policy.endDate) {\n        const startDateObj = new Date(policy.startDate);\n        const endDateObj = new Date(policy.endDate);\n\n        // 정책 기간 정보 저장\n        periodsData[policy.id] = {\n          start: startDateObj,\n          end: endDateObj,\n          type: policy.type\n        };\n\n        // 현재 월에 해당하는 날짜만 달력에 하이라이트\n        const currentMonthYear = new Date(currentYear, currentMonth, 1);\n        const nextMonthYear = new Date(currentYear, currentMonth + 1, 0);\n\n        // 정책 기간이 현재 표시 중인 월에 포함되는지 확인\n        if (startDateObj <= nextMonthYear && endDateObj >= currentMonthYear) {\n          // 현재 월에 포함되는 날짜만 이벤트로 등록\n          const periodsStart = startDateObj < currentMonthYear ? currentMonthYear : startDateObj;\n          const periodsEnd = endDateObj > nextMonthYear ? nextMonthYear : endDateObj;\n\n          // 날짜별 이벤트 등록\n          for (let day = new Date(periodsStart); day <= periodsEnd; day.setDate(day.getDate() + 1)) {\n            const dateKey = `${day.getFullYear()}-${String(day.getMonth() + 1).padStart(2, '0')}-${String(day.getDate()).padStart(2, '0')}`;\n            eventsData[dateKey] = {\n              type: policy.type,\n              name: policy.id,\n              applicationType: policy.application_type\n            };\n          }\n        }\n      }\n    });\n    setPolicyPeriods(periodsData);\n    setEvents(eventsData);\n    setLoading(false);\n  }, [allPolicies, currentMonth, currentYear]);\n\n  // 사용자의 즐겨찾기 정책 및 정책 데이터 가져오기 - 최초 한 번만 실행\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // 이미 데이터를 가져왔다면 API 호출하지 않음\n        if (dataFetched) {\n          updateCalendarData();\n          return;\n        }\n\n        // 로그인 상태 확인\n        if (userId === 'guest') {\n          // 비로그인 상태인 경우 샘플 데이터 표시\n          const policiesData = [{\n            id: \"청년내일채움공제\",\n            title: \"청년내일채움공제\",\n            content: \"취업 청년의 자산형성 지원\",\n            type: \"여유있는 정책\",\n            startDate: \"2023-03-02\",\n            endDate: \"2023-03-11\",\n            application_period: \"2023년 3월 2일 ~ 3월 11일\",\n            application_type: \"정기\"\n          }, {\n            id: \"청년희망적금\",\n            title: \"청년희망적금\",\n            content: \"청년 자산형성 지원\",\n            type: \"종료된 정책\",\n            startDate: \"2023-03-08\",\n            endDate: \"2023-03-17\",\n            application_period: \"2023년 3월 8일 ~ 3월 17일\",\n            application_type: \"정기\"\n          }, {\n            id: \"청년주택드림\",\n            title: \"청년주택드림\",\n            content: \"청년 주거 지원\",\n            type: \"마감 임박 정책\",\n            startDate: \"2023-03-15\",\n            endDate: \"2023-03-24\",\n            application_period: \"2023년 3월 15일 ~ 3월 24일\",\n            application_type: \"정기\"\n          }, {\n            id: \"청년도약계좌\",\n            title: \"청년도약계좌\",\n            content: \"청년 미래 자산 형성 지원\",\n            type: \"여유있는 정책\",\n            startDate: \"2023-03-20\",\n            endDate: \"2023-03-27\",\n            application_period: \"상시 신청 가능\",\n            application_type: \"상시\"\n          }];\n          console.log('비로그인 상태 - 샘플 정책 표시');\n          setAllPolicies(policiesData);\n          setDataFetched(true);\n          updateCalendarData();\n          return;\n        }\n\n        // 새로운 API 엔드포인트를 호출하여 즐겨찾기한 정책의 상세 정보 가져오기\n        const response = await fetch(`http://localhost:8000/favorites/${userId}/calendar`);\n        if (!response.ok) throw new Error('즐겨찾기 정책 상세 정보 가져오기 실패');\n        const policiesData = await response.json();\n        console.log('API에서 가져온 정책 데이터:', policiesData);\n\n        // 모든 정책 데이터 저장\n        setAllPolicies(policiesData);\n        setDataFetched(true);\n        updateCalendarData();\n      } catch (error) {\n        console.error(\"데이터 로딩 오류:\", error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [userId, updateCalendarData, dataFetched]);\n\n  // 월이 변경될 때마다 정책 데이터 업데이트\n  useEffect(() => {\n    if (dataFetched) {\n      updateCalendarData();\n    }\n  }, [currentMonth, currentYear, dataFetched, updateCalendarData]);\n\n  // 월 이동 함수\n  const prevMonth = () => {\n    setCurrentMonth(prev => {\n      if (prev === 0) {\n        setCurrentYear(prev => prev - 1);\n        return 11;\n      }\n      return prev - 1;\n    });\n  };\n  const nextMonth = () => {\n    setCurrentMonth(prev => {\n      if (prev === 11) {\n        setCurrentYear(prev => prev + 1);\n        return 0;\n      }\n      return prev + 1;\n    });\n  };\n\n  // 정책 항목 하이라이트 처리\n  const highlightPolicyPeriod = (policyId, highlight) => {\n    const period = policyPeriods[policyId];\n    if (!period) return;\n\n    // 날짜 정보가 없는 경우 하이라이트하지 않음\n    if (!period.start || !period.end) {\n      return;\n    }\n    const startDate = new Date(period.start);\n    const endDate = new Date(period.end);\n\n    // 현재 표시 중인 월/년에 해당하는 날짜 하이라이트\n    const currentMonthYear = new Date(currentYear, currentMonth, 1);\n    const lastDayOfCurrentMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n\n    // 정책 기간이 현재 월에 포함되는지 확인\n    if (!(startDate.getMonth() > currentMonth && startDate.getFullYear() >= currentYear) && !(endDate.getMonth() < currentMonth && endDate.getFullYear() <= currentYear)) {\n      const calendarDays = document.querySelectorAll('.calendar-day:not(.inactive)');\n      calendarDays.forEach(day => {\n        const dayNumber = parseInt(day.textContent);\n\n        // 현재 월/년의 해당 날짜\n        const currentDayDate = new Date(currentYear, currentMonth, dayNumber);\n\n        // 시작일과 종료일 사이에 있는지 확인\n        if (currentDayDate >= startDate && currentDayDate <= endDate) {\n          if (highlight) {\n            day.classList.add(`policy-${period.type.replace(/\\s+/g, '-').toLowerCase()}`);\n          } else {\n            day.classList.remove(`policy-${period.type.replace(/\\s+/g, '-').toLowerCase()}`);\n          }\n        }\n      });\n    }\n  };\n\n  // 캘린더 생성 함수\n  const generateCalendar = () => {\n    const firstDay = new Date(currentYear, currentMonth, 1).getDay();\n    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n    const prevMonthDays = new Date(currentYear, currentMonth, 0).getDate();\n    const calendarDays = [];\n\n    // 요일 헤더 추가\n    weekdayNames.forEach(weekday => {\n      calendarDays.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-weekday\",\n        children: weekday\n      }, `weekday-${weekday}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this));\n    });\n\n    // 날짜 생성\n    let dayCounter = 1 - firstDay;\n    const rowsNeeded = Math.ceil((firstDay + daysInMonth) / 7);\n    const totalDays = rowsNeeded * 7;\n    for (let i = 0; i < totalDays; i++) {\n      const isCurrentDay = dayCounter === currentDay && currentYear === new Date().getFullYear() && currentMonth === new Date().getMonth();\n      const isInactive = dayCounter <= 0 || dayCounter > daysInMonth;\n      let dayText;\n      if (dayCounter <= 0) {\n        dayText = prevMonthDays + dayCounter;\n      } else if (dayCounter > daysInMonth) {\n        dayText = dayCounter - daysInMonth;\n      } else {\n        dayText = dayCounter;\n      }\n\n      // 날짜 클래스 설정\n      let dayClass = \"calendar-day\";\n      if (isInactive) dayClass += \" inactive\";\n      if (isCurrentDay) dayClass += \" today\";\n\n      // 현재 날짜 객체 생성 (현재 월/년/일)\n      let currentDateObj;\n      if (dayCounter <= 0) {\n        // 이전 달의 날짜\n        const prevMonth = currentMonth === 0 ? 11 : currentMonth - 1;\n        const prevYear = currentMonth === 0 ? currentYear - 1 : currentYear;\n        currentDateObj = new Date(prevYear, prevMonth, prevMonthDays + dayCounter);\n      } else if (dayCounter > daysInMonth) {\n        // 다음 달의 날짜\n        const nextMonth = currentMonth === 11 ? 0 : currentMonth + 1;\n        const nextYear = currentMonth === 11 ? currentYear + 1 : currentYear;\n        currentDateObj = new Date(nextYear, nextMonth, dayCounter - daysInMonth);\n      } else {\n        // 현재 달의 날짜\n        currentDateObj = new Date(currentYear, currentMonth, dayCounter);\n      }\n\n      // 날짜를 YYYY-MM-DD 형식의 문자열로 변환\n      const dateKey = `${currentDateObj.getFullYear()}-${String(currentDateObj.getMonth() + 1).padStart(2, '0')}-${String(currentDateObj.getDate()).padStart(2, '0')}`;\n\n      // 해당 날짜에 이벤트가 있는지 확인\n      if (events[dateKey] && !isInactive) {\n        const event = events[dateKey];\n        const eventType = event.type;\n        dayClass += ` policy-${eventType.replace(/\\s+/g, '-').toLowerCase()}`;\n      }\n      calendarDays.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: dayClass,\n        children: dayText\n      }, `day-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this));\n      dayCounter++;\n    }\n    return calendarDays;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"\\uD380\\uB529\\uC778\\uD2B8 \\uB85C\\uACE0\",\n          className: \"fundint-logo-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sidebar-title\",\n        children: \"\\uB0B4 \\uC990\\uACA8\\uCC3E\\uAE30 \\uC815\\uCC45\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), userId === 'guest' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-notice\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uB098\\uB9CC\\uC758 \\uC990\\uACA8\\uCC3E\\uAE30 \\uC815\\uCC45\\uC744 \\uAD00\\uB9AC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"login-button\",\n          children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uC815\\uCC45 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"policy-box-container\",\n        children: policies.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-policies\",\n          children: \"\\uC990\\uACA8\\uCC3E\\uAE30\\uB41C \\uC815\\uCC45\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this) : policies.map(policy => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `policy-box ${policy.type.replace(/\\s+/g, '-').toLowerCase()} ${policy.month === currentMonth + 1 ? 'current-month' : ''}`,\n          \"data-policy-id\": policy.id,\n          \"data-type\": policy.type,\n          \"data-application-type\": policy.application_type || '일반',\n          onMouseEnter: () => highlightPolicyPeriod(policy.id, true),\n          onMouseLeave: () => highlightPolicyPeriod(policy.id, false),\n          onClick: () => {\n            setSelectedPolicy(policy);\n            setShowDetailModal(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-title\",\n            children: policy.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 19\n          }, this), policy.content && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-content\",\n            children: policy.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"application-period-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"application-period-text\",\n              children: policy.application_period\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 19\n          }, this)]\n        }, policy.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"policy-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"policy-types-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"relaxed-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 18\n            }, this), \"\\uC5EC\\uC720\\uC788\\uB294\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"urgent-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 18\n            }, this), \"\\uB9C8\\uAC10\\uC784\\uBC15\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ended-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 18\n            }, this), \"\\uC885\\uB8CC\\uB41C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"currentMonthYear\",\n          children: [monthNames[currentMonth], \" \", currentYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prevMonth,\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextMonth,\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-days\",\n        children: generateCalendar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), showDetailModal && selectedPolicy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"policy-calendar-modal-overlay\",\n      onClick: () => setShowDetailModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"policy-calendar-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"policy-calendar-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedPolicy.title || '정책 상세 정보'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"policy-calendar-modal-close-btn\",\n            onClick: () => setShowDetailModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"policy-calendar-modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"policy-content policy-calendar-text-with-newlines\",\n            children: selectedPolicy.content || '정책 설명'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), selectedPolicy.support_type && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-support-type\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uC720\\uD615:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.support_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this), selectedPolicy.eligibility && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-eligibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uB300\\uC0C1:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.eligibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this), selectedPolicy.benefits && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-benefits\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uB0B4\\uC6A9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.benefits\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), selectedPolicy.selection_criteria && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-selection-criteria\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC120\\uC815 \\uAE30\\uC900:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.selection_criteria\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this), selectedPolicy.application_period && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-period\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC2E0\\uCCAD \\uAE30\\uD55C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.application_period\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this), selectedPolicy.application_method && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-method\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC2E0\\uCCAD \\uBC29\\uBC95:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.application_method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this), selectedPolicy.required_documents && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-required-documents\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uAD6C\\uBE44 \\uC11C\\uB958:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.required_documents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this), selectedPolicy.application_office && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-office\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC811\\uC218 \\uAE30\\uAD00:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.application_office\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this), selectedPolicy.contact_info && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-contact-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uBB38\\uC758\\uCC98:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.contact_info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 17\n          }, this), selectedPolicy.legal_basis && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-legal-basis\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uBC95\\uB839:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.legal_basis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this), selectedPolicy.administrative_rule && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-administrative-rule\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD589\\uC815\\uADDC\\uCE59:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.administrative_rule\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this), selectedPolicy.local_law && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-local-law\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC790\\uCE58\\uBC95\\uADDC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.local_law\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 17\n          }, this), selectedPolicy.responsible_agency && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-responsible-agency\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC18C\\uAD00\\uAE30\\uAD00:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.responsible_agency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this), selectedPolicy.last_updated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-last-updated\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC218\\uC815\\uC77C\\uC2DC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"policy-calendar-text-with-newlines\",\n              children: selectedPolicy.last_updated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-calendar-modal-footer\",\n            children: [selectedPolicy.online_application_url ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"policy-calendar-apply-button\",\n              onClick: () => window.open(selectedPolicy.online_application_url, '_blank'),\n              children: \"\\uC628\\uB77C\\uC778 \\uC2E0\\uCCAD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"policy-calendar-no-url-hint modal-hint\",\n              children: \"(\\uC628\\uB77C\\uC778 \\uC2E0\\uCCAD \\uBD88\\uAC00)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"policy-calendar-close-button\",\n              onClick: () => setShowDetailModal(false),\n              children: \"\\uB2EB\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(PolicyCalendar, \"QQieskUaaS3reCENG0lpq27TklI=\", false, function () {\n  return [useAuthStore];\n});\n_c = PolicyCalendar;\nexport default PolicyCalendar;\nvar _c;\n$RefreshReg$(_c, \"PolicyCalendar\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","logo","useAuthStore","jsxDEV","_jsxDEV","PolicyCalendar","_s","currentDate","Date","currentYear","setCurrentYear","getFullYear","currentMonth","setCurrentMonth","getMonth","currentDay","getDate","allPolicies","setAllPolicies","policies","setPolicies","events","setEvents","policyPeriods","setPolicyPeriods","loading","setLoading","dataFetched","setDataFetched","selectedPolicy","setSelectedPolicy","showDetailModal","setShowDetailModal","user","state","userId","user_id","monthNames","weekdayNames","updateCalendarData","length","periodsData","eventsData","forEach","policy","startDate","endDate","startDateObj","endDateObj","id","start","end","type","currentMonthYear","nextMonthYear","periodsStart","periodsEnd","day","setDate","dateKey","String","padStart","name","applicationType","application_type","fetchData","policiesData","title","content","application_period","console","log","response","fetch","ok","Error","json","error","prevMonth","prev","nextMonth","highlightPolicyPeriod","policyId","highlight","period","lastDayOfCurrentMonth","calendarDays","document","querySelectorAll","dayNumber","parseInt","textContent","currentDayDate","classList","add","replace","toLowerCase","remove","generateCalendar","firstDay","getDay","daysInMonth","prevMonthDays","weekday","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dayCounter","rowsNeeded","Math","ceil","totalDays","i","isCurrentDay","isInactive","dayText","dayClass","currentDateObj","prevYear","nextYear","event","eventType","to","src","alt","map","month","onMouseEnter","onMouseLeave","onClick","e","stopPropagation","support_type","eligibility","benefits","selection_criteria","application_method","required_documents","application_office","contact_info","legal_basis","administrative_rule","local_law","responsible_agency","last_updated","online_application_url","window","open","_c","$RefreshReg$"],"sources":["/home/elicer/Fundit_2.1/fronted/src/components/PolicyCalendar/PolicyCalendar.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PolicyCalendar.css';\nimport logo from './fundint.svg';\nimport useAuthStore from '../context/authStore';\n\nconst PolicyCalendar = () => {\n  // 현재 날짜 정보\n  const currentDate = new Date();\n  const [currentYear, setCurrentYear] = useState(currentDate.getFullYear());\n  const [currentMonth, setCurrentMonth] = useState(currentDate.getMonth());\n  const currentDay = currentDate.getDate();\n\n  // 정책 데이터 및 즐겨찾기 상태\n  const [allPolicies, setAllPolicies] = useState([]); // 모든 정책 데이터 저장\n  const [policies, setPolicies] = useState([]);\n  const [events, setEvents] = useState({});\n  const [policyPeriods, setPolicyPeriods] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [dataFetched, setDataFetched] = useState(false); // 데이터 로딩 여부 추적\n  \n  // 상세 정보 모달을 위한 상태 추가\n  const [selectedPolicy, setSelectedPolicy] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  \n  // 사용자 정보 - Redux 대신 Zustand 사용\n  const user = useAuthStore(state => state.user);\n  const userId = user ? user.user_id : 'guest';\n\n  const monthNames = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n  const weekdayNames = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\n  // 정책 데이터로부터 현재 월에 해당하는 정책 및 이벤트 생성 함수\n  const updateCalendarData = useCallback(() => {\n    if (allPolicies.length === 0) return;\n    \n    // 모든 정책 표시 (필터링 없이)\n    setPolicies(allPolicies);\n    \n    // 정책 기간 정보 및 이벤트 생성\n    const periodsData = {};\n    const eventsData = {};\n    \n    allPolicies.forEach(policy => {\n      // 날짜 정보가 있는 경우에만 처리\n      if (policy.startDate && policy.endDate) {\n        const startDateObj = new Date(policy.startDate);\n        const endDateObj = new Date(policy.endDate);\n        \n        // 정책 기간 정보 저장\n        periodsData[policy.id] = {\n          start: startDateObj,\n          end: endDateObj,\n          type: policy.type\n        };\n        \n        // 현재 월에 해당하는 날짜만 달력에 하이라이트\n        const currentMonthYear = new Date(currentYear, currentMonth, 1);\n        const nextMonthYear = new Date(currentYear, currentMonth + 1, 0);\n        \n        // 정책 기간이 현재 표시 중인 월에 포함되는지 확인\n        if ((startDateObj <= nextMonthYear && endDateObj >= currentMonthYear)) {\n          // 현재 월에 포함되는 날짜만 이벤트로 등록\n          const periodsStart = startDateObj < currentMonthYear ? currentMonthYear : startDateObj;\n          const periodsEnd = endDateObj > nextMonthYear ? nextMonthYear : endDateObj;\n          \n          // 날짜별 이벤트 등록\n          for (let day = new Date(periodsStart); day <= periodsEnd; day.setDate(day.getDate() + 1)) {\n            const dateKey = `${day.getFullYear()}-${String(day.getMonth() + 1).padStart(2, '0')}-${String(day.getDate()).padStart(2, '0')}`;\n            eventsData[dateKey] = {\n              type: policy.type,\n              name: policy.id,\n              applicationType: policy.application_type\n            };\n          }\n        }\n      }\n    });\n    \n    setPolicyPeriods(periodsData);\n    setEvents(eventsData);\n    setLoading(false);\n  }, [allPolicies, currentMonth, currentYear]);\n\n  // 사용자의 즐겨찾기 정책 및 정책 데이터 가져오기 - 최초 한 번만 실행\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        \n        // 이미 데이터를 가져왔다면 API 호출하지 않음\n        if (dataFetched) {\n          updateCalendarData();\n          return;\n        }\n        \n        // 로그인 상태 확인\n        if (userId === 'guest') {\n          // 비로그인 상태인 경우 샘플 데이터 표시\n          const policiesData = [\n            {\n              id: \"청년내일채움공제\",\n              title: \"청년내일채움공제\",\n              content: \"취업 청년의 자산형성 지원\",\n              type: \"여유있는 정책\",\n              startDate: \"2023-03-02\",\n              endDate: \"2023-03-11\",\n              application_period: \"2023년 3월 2일 ~ 3월 11일\",\n              application_type: \"정기\"\n            },\n            {\n              id: \"청년희망적금\",\n              title: \"청년희망적금\",\n              content: \"청년 자산형성 지원\",\n              type: \"종료된 정책\",\n              startDate: \"2023-03-08\",\n              endDate: \"2023-03-17\",\n              application_period: \"2023년 3월 8일 ~ 3월 17일\",\n              application_type: \"정기\"\n            },\n            {\n              id: \"청년주택드림\",\n              title: \"청년주택드림\",\n              content: \"청년 주거 지원\",\n              type: \"마감 임박 정책\",\n              startDate: \"2023-03-15\",\n              endDate: \"2023-03-24\",\n              application_period: \"2023년 3월 15일 ~ 3월 24일\",\n              application_type: \"정기\"\n            },\n            {\n              id: \"청년도약계좌\",\n              title: \"청년도약계좌\",\n              content: \"청년 미래 자산 형성 지원\",\n              type: \"여유있는 정책\",\n              startDate: \"2023-03-20\",\n              endDate: \"2023-03-27\",\n              application_period: \"상시 신청 가능\",\n              application_type: \"상시\"\n            }\n          ];\n          \n          console.log('비로그인 상태 - 샘플 정책 표시');\n          setAllPolicies(policiesData);\n          setDataFetched(true);\n          updateCalendarData();\n          return;\n        }\n        \n        // 새로운 API 엔드포인트를 호출하여 즐겨찾기한 정책의 상세 정보 가져오기\n        const response = await fetch(`http://localhost:8000/favorites/${userId}/calendar`);\n        if (!response.ok) throw new Error('즐겨찾기 정책 상세 정보 가져오기 실패');\n        const policiesData = await response.json();\n        \n        console.log('API에서 가져온 정책 데이터:', policiesData);\n        \n        // 모든 정책 데이터 저장\n        setAllPolicies(policiesData);\n        setDataFetched(true);\n        updateCalendarData();\n      } catch (error) {\n        console.error(\"데이터 로딩 오류:\", error);\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [userId, updateCalendarData, dataFetched]);\n  \n  // 월이 변경될 때마다 정책 데이터 업데이트\n  useEffect(() => {\n    if (dataFetched) {\n      updateCalendarData();\n    }\n  }, [currentMonth, currentYear, dataFetched, updateCalendarData]);\n\n  // 월 이동 함수\n  const prevMonth = () => {\n    setCurrentMonth(prev => {\n      if (prev === 0) {\n        setCurrentYear(prev => prev - 1);\n        return 11;\n      }\n      return prev - 1;\n    });\n  };\n\n  const nextMonth = () => {\n    setCurrentMonth(prev => {\n      if (prev === 11) {\n        setCurrentYear(prev => prev + 1);\n        return 0;\n      }\n      return prev + 1;\n    });\n  };\n\n  // 정책 항목 하이라이트 처리\n  const highlightPolicyPeriod = (policyId, highlight) => {\n    const period = policyPeriods[policyId];\n    if (!period) return;\n    \n    // 날짜 정보가 없는 경우 하이라이트하지 않음\n    if (!period.start || !period.end) {\n      return;\n    }\n    \n    const startDate = new Date(period.start);\n    const endDate = new Date(period.end);\n    \n    // 현재 표시 중인 월/년에 해당하는 날짜 하이라이트\n    const currentMonthYear = new Date(currentYear, currentMonth, 1);\n    const lastDayOfCurrentMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n    \n    // 정책 기간이 현재 월에 포함되는지 확인\n    if (!(startDate.getMonth() > currentMonth && startDate.getFullYear() >= currentYear) &&\n        !(endDate.getMonth() < currentMonth && endDate.getFullYear() <= currentYear)) {\n      \n      const calendarDays = document.querySelectorAll('.calendar-day:not(.inactive)');\n      \n      calendarDays.forEach(day => {\n        const dayNumber = parseInt(day.textContent);\n        \n        // 현재 월/년의 해당 날짜\n        const currentDayDate = new Date(currentYear, currentMonth, dayNumber);\n        \n        // 시작일과 종료일 사이에 있는지 확인\n        if (currentDayDate >= startDate && currentDayDate <= endDate) {\n          if (highlight) {\n            day.classList.add(`policy-${period.type.replace(/\\s+/g, '-').toLowerCase()}`);\n          } else {\n            day.classList.remove(`policy-${period.type.replace(/\\s+/g, '-').toLowerCase()}`);\n          }\n        }\n      });\n    }\n  };\n\n  // 캘린더 생성 함수\n  const generateCalendar = () => {\n    const firstDay = new Date(currentYear, currentMonth, 1).getDay();\n    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n    const prevMonthDays = new Date(currentYear, currentMonth, 0).getDate();\n    \n    const calendarDays = [];\n    \n    // 요일 헤더 추가\n    weekdayNames.forEach(weekday => {\n      calendarDays.push(\n        <div key={`weekday-${weekday}`} className=\"calendar-weekday\">\n          {weekday}\n        </div>\n      );\n    });\n    \n    // 날짜 생성\n    let dayCounter = 1 - firstDay;\n    const rowsNeeded = Math.ceil((firstDay + daysInMonth) / 7);\n    const totalDays = rowsNeeded * 7;\n    \n    for (let i = 0; i < totalDays; i++) {\n      const isCurrentDay = dayCounter === currentDay && \n                          currentYear === new Date().getFullYear() && \n                          currentMonth === new Date().getMonth();\n      \n      const isInactive = dayCounter <= 0 || dayCounter > daysInMonth;\n      \n      let dayText;\n      if (dayCounter <= 0) {\n        dayText = prevMonthDays + dayCounter;\n      } else if (dayCounter > daysInMonth) {\n        dayText = dayCounter - daysInMonth;\n      } else {\n        dayText = dayCounter;\n      }\n      \n      // 날짜 클래스 설정\n      let dayClass = \"calendar-day\";\n      if (isInactive) dayClass += \" inactive\";\n      if (isCurrentDay) dayClass += \" today\";\n      \n      // 현재 날짜 객체 생성 (현재 월/년/일)\n      let currentDateObj;\n      if (dayCounter <= 0) {\n        // 이전 달의 날짜\n        const prevMonth = currentMonth === 0 ? 11 : currentMonth - 1;\n        const prevYear = currentMonth === 0 ? currentYear - 1 : currentYear;\n        currentDateObj = new Date(prevYear, prevMonth, prevMonthDays + dayCounter);\n      } else if (dayCounter > daysInMonth) {\n        // 다음 달의 날짜\n        const nextMonth = currentMonth === 11 ? 0 : currentMonth + 1;\n        const nextYear = currentMonth === 11 ? currentYear + 1 : currentYear;\n        currentDateObj = new Date(nextYear, nextMonth, dayCounter - daysInMonth);\n      } else {\n        // 현재 달의 날짜\n        currentDateObj = new Date(currentYear, currentMonth, dayCounter);\n      }\n      \n      // 날짜를 YYYY-MM-DD 형식의 문자열로 변환\n      const dateKey = `${currentDateObj.getFullYear()}-${String(currentDateObj.getMonth() + 1).padStart(2, '0')}-${String(currentDateObj.getDate()).padStart(2, '0')}`;\n      \n      // 해당 날짜에 이벤트가 있는지 확인\n      if (events[dateKey] && !isInactive) {\n        const event = events[dateKey];\n        const eventType = event.type;\n        dayClass += ` policy-${eventType.replace(/\\s+/g, '-').toLowerCase()}`;\n      }\n      \n      calendarDays.push(\n        <div \n          key={`day-${i}`} \n          className={dayClass}\n        >\n          {dayText}\n        </div>\n      );\n      \n      dayCounter++;\n    }\n    \n    return calendarDays;\n  };\n\n  return (\n    <div className=\"policy-calendar-container\">\n      <div className=\"sidebar-calendar\">\n        <Link to=\"/\">\n          <img src={logo} alt=\"펀딩인트 로고\" className=\"fundint-logo-image\" />\n        </Link>\n        \n        <h3 className=\"sidebar-title\">내 즐겨찾기 정책</h3>\n        \n        {userId === 'guest' && (\n          <div className=\"login-notice\">\n            <p>로그인 후 나만의 즐겨찾기 정책을 관리할 수 있습니다.</p>\n            <Link to=\"/login\" className=\"login-button\">로그인하기</Link>\n          </div>\n        )}\n        \n        {loading ? (\n          <div className=\"loading\">정책 정보를 불러오는 중...</div>\n        ) : (\n          <div className=\"policy-box-container\">\n            {policies.length === 0 ? (\n              <div className=\"no-policies\">즐겨찾기된 정책이 없습니다.</div>\n            ) : (\n              policies.map(policy => (\n                <div \n                  key={policy.id} \n                  className={`policy-box ${policy.type.replace(/\\s+/g, '-').toLowerCase()} ${policy.month === currentMonth + 1 ? 'current-month' : ''}`}\n                  data-policy-id={policy.id}\n                  data-type={policy.type}\n                  data-application-type={policy.application_type || '일반'}\n                  onMouseEnter={() => highlightPolicyPeriod(policy.id, true)}\n                  onMouseLeave={() => highlightPolicyPeriod(policy.id, false)}\n                  onClick={() => {\n                    setSelectedPolicy(policy);\n                    setShowDetailModal(true);\n                  }}\n                >\n                  <div className=\"policy-title\">{policy.title}</div>\n                  {policy.content && <div className=\"policy-content\">{policy.content}</div>}\n                  <div className=\"application-period-info\">\n                    <span className=\"application-period-text\">\n                      {policy.application_period}\n                    </span>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        )}\n        \n        <div className=\"policy-info\">\n          <div className=\"policy-types-row\">\n            <div><span className=\"relaxed-icon\"></span>여유있는</div>\n            <div><span className=\"urgent-icon\"></span>마감임박</div>\n            <div><span className=\"ended-icon\"></span>종료된</div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"calendar\">\n        <div className=\"calendar-header\">\n          <span id=\"currentMonthYear\">{monthNames[currentMonth]} {currentYear}</span>\n          <div className=\"button-container\">\n            <button onClick={prevMonth}>&lt;</button>\n            <button onClick={nextMonth}>&gt;</button>\n          </div>\n        </div>\n        \n        <div className=\"calendar-days\">\n          {generateCalendar()}\n        </div>\n      </div>\n\n      {/* 상세 정보 모달 */}\n      {showDetailModal && selectedPolicy && (\n        <div className=\"policy-calendar-modal-overlay\" onClick={() => setShowDetailModal(false)}>\n          <div className=\"policy-calendar-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"policy-calendar-modal-header\">\n              <h3>{selectedPolicy.title || '정책 상세 정보'}</h3>\n              <button className=\"policy-calendar-modal-close-btn\" onClick={() => setShowDetailModal(false)}>×</button>\n            </div>\n            <div className=\"policy-calendar-modal-content\">\n              <p className=\"policy-content policy-calendar-text-with-newlines\">{selectedPolicy.content || '정책 설명'}</p>\n              \n              {selectedPolicy.support_type && (\n                <div className=\"policy-support-type\">\n                  <span>지원 유형:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.support_type}</span>\n                </div>\n              )}\n              {selectedPolicy.eligibility && (\n                <div className=\"policy-eligibility\">\n                  <span>지원 대상:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.eligibility}</span>\n                </div>\n              )}\n              {selectedPolicy.benefits && (\n                <div className=\"policy-benefits\">\n                  <span>지원 내용:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.benefits}</span>\n                </div>\n              )}\n              {selectedPolicy.selection_criteria && (\n                <div className=\"policy-selection-criteria\">\n                  <span>선정 기준:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.selection_criteria}</span>\n                </div>\n              )}\n              {selectedPolicy.application_period && (\n                <div className=\"policy-application-period\">\n                  <span>신청 기한:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.application_period}</span>\n                </div>\n              )}\n              {selectedPolicy.application_method && (\n                <div className=\"policy-application-method\">\n                  <span>신청 방법:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.application_method}</span>\n                </div>\n              )}\n              {selectedPolicy.required_documents && (\n                <div className=\"policy-required-documents\">\n                  <span>구비 서류:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.required_documents}</span>\n                </div>\n              )}\n              {selectedPolicy.application_office && (\n                <div className=\"policy-application-office\">\n                  <span>접수 기관:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.application_office}</span>\n                </div>\n              )}\n              {selectedPolicy.contact_info && (\n                <div className=\"policy-contact-info\">\n                  <span>문의처:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.contact_info}</span>\n                </div>\n              )}\n              {selectedPolicy.legal_basis && (\n                <div className=\"policy-legal-basis\">\n                  <span>법령:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.legal_basis}</span>\n                </div>\n              )}\n              {selectedPolicy.administrative_rule && (\n                <div className=\"policy-administrative-rule\">\n                  <span>행정규칙:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.administrative_rule}</span>\n                </div>\n              )}\n              {selectedPolicy.local_law && (\n                <div className=\"policy-local-law\">\n                  <span>자치법규:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.local_law}</span>\n                </div>\n              )}\n              {selectedPolicy.responsible_agency && (\n                <div className=\"policy-responsible-agency\">\n                  <span>소관기관:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.responsible_agency}</span>\n                </div>\n              )}\n              {selectedPolicy.last_updated && (\n                <div className=\"policy-last-updated\">\n                  <span>수정일시:</span> <span className=\"policy-calendar-text-with-newlines\">{selectedPolicy.last_updated}</span>\n                </div>\n              )}\n              \n              <div className=\"policy-calendar-modal-footer\">\n                {selectedPolicy.online_application_url ? (\n                  <button \n                    className=\"policy-calendar-apply-button\"\n                    onClick={() => window.open(selectedPolicy.online_application_url, '_blank')}\n                  >\n                    온라인 신청하기\n                  </button>\n                ) : (\n                  <p className=\"policy-calendar-no-url-hint modal-hint\">(온라인 신청 불가)</p>\n                )}\n                <button \n                  className=\"policy-calendar-close-button\"\n                  onClick={() => setShowDetailModal(false)}\n                >\n                  닫기\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PolicyCalendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}