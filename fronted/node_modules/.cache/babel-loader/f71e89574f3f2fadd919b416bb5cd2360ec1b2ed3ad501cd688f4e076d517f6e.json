{"ast":null,"code":"var _jsxFileName = \"/Users/jejinan/Desktop/sesac_final/Fundit_2_6/fronted/src/components/ChatBot/ChatSessionDetail.js\",\n  _s = $RefreshSig$();\n// ChatSessionDetail.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './ChatBot.css';\nimport { handleMicrophoneClick } from '../utils/microphoneHandler';\nimport { setMessage } from '../redux/messageSlice';\nimport useAuthStore from '../context/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatSessionDetail = () => {\n  _s();\n  const {\n    sessionId\n  } = useParams(); // URL에서 sessionId를 추출합니다.\n  const [chatHistory, setChatHistory] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n  const dispatch = useDispatch();\n  const message = useSelector(state => state.message);\n\n  // 정책 데이터를 저장할 상태 추가\n  const [policies, setPolicies] = useState({});\n\n  // 상세 정보 모달을 위한 상태 추가\n  const [selectedPolicy, setSelectedPolicy] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n\n  // 즐겨찾기 상태 관리 \n  const [favorites, setFavorites] = useState([]);\n  // useAuthStore에서 사용자 정보 가져오기\n  const user = useAuthStore.getState().user;\n  const userId = user ? user.user_id : 'guest'; // 로그인 여부에 따라 실제 user_id 또는 'guest' 사용\n\n  // WebSocket 연결 상태 추가\n  const [socket, setSocket] = useState(null);\n  const socketRef = useRef(null);\n\n  // WebSocket 연결 설정\n  useEffect(() => {\n    // 이전 연결 정리\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n\n    // WebSocket 연결 생성\n    const ws = new WebSocket(`ws://localhost:8000/ws/${sessionId}`);\n\n    // 연결 이벤트 핸들러\n    ws.onopen = () => {\n      console.log('WebSocket 연결 성공');\n      setSocket(ws);\n      socketRef.current = ws;\n    };\n\n    // 메시지 수신 핸들러\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        console.log('WebSocket 메시지 수신:', data);\n\n        // 메시지 타입에 따른 처리\n        switch (data.type) {\n          case 'user_message':\n            // 사용자 메시지 수신 - 이미 로컬에서 추가했을 수 있으므로 중복 확인\n            if (!chatHistory.some(msg => msg.message_id === data.message_id)) {\n              setChatHistory(prev => [...prev, {\n                message_id: data.message_id,\n                sender: data.sender,\n                message: data.message,\n                timestamp: data.timestamp\n              }]);\n            }\n            break;\n          case 'bot_message':\n            // 봇 메시지 수신\n            setChatHistory(prev => [...prev.filter(msg => msg.sender !== 'loading'), {\n              message_id: data.message_id,\n              sender: data.sender,\n              message: data.message,\n              timestamp: data.timestamp\n            }]);\n\n            // 정책 정보가 포함된 경우 저장\n            if (data.policies && data.policies.length > 0) {\n              setPolicies(prev => ({\n                ...prev,\n                [data.message_id]: data.policies\n              }));\n            }\n\n            // 로딩 상태 종료\n            setIsLoading(false);\n            break;\n          case 'typing':\n            // 타이핑/로딩 상태 처리\n            if (data.status === 'started') {\n              setIsLoading(true);\n            } else {\n              setIsLoading(false);\n            }\n            break;\n          case 'error':\n            // 오류 메시지 처리\n            console.error('서버 오류:', data.message);\n            setChatHistory(prev => [...prev, {\n              message_id: `error_${Date.now()}`,\n              sender: 'bot',\n              message: data.message,\n              timestamp: new Date().toISOString()\n            }]);\n            setIsLoading(false);\n            break;\n          default:\n            console.log('알 수 없는 메시지 타입:', data);\n        }\n      } catch (error) {\n        console.error('WebSocket 메시지 파싱 오류:', error);\n      }\n    };\n\n    // 오류 핸들러\n    ws.onerror = error => {\n      console.error('WebSocket 오류:', error);\n    };\n\n    // 연결 종료 핸들러\n    ws.onclose = () => {\n      console.log('WebSocket 연결 종료');\n      // 연결이 일시적으로 끊어진 경우 재연결 로직 (선택 사항)\n      setTimeout(() => {\n        if (socketRef.current === ws) {\n          console.log('WebSocket 재연결 시도...');\n          setSocket(null);\n        }\n      }, 3000);\n    };\n\n    // 정리 함수\n    return () => {\n      console.log('WebSocket 연결 정리');\n      if (ws) {\n        ws.close();\n        socketRef.current = null;\n      }\n    };\n  }, [sessionId]); // sessionId가 변경되면 새로운 연결 설정\n\n  // 백엔드에서 해당 세션의 채팅 기록을 불러옵니다.\n  useEffect(() => {\n    console.log(\"채팅 기록 불러오기\");\n    fetch(`http://localhost:8000/sessions/${sessionId}`).then(res => res.json()).then(data => {\n      if (data.messages && data.messages.length > 0) {\n        // 타임스탬프와 sender에 따라 메시지를 정렬합니다.\n        console.log(\"메시지 기록 있음\");\n        const sortedMessages = data.messages.sort((a, b) => {\n          return a.timestamp.localeCompare(b.timestamp) || (a.sender === 'user' ? -1 : 1);\n        });\n\n        // 이미 백엔드에서 생성된 메시지 ID 사용\n        setChatHistory(sortedMessages);\n\n        // 정책 정보가 있는 메시지 찾기\n        const policiesData = {};\n        sortedMessages.forEach(msg => {\n          // policies 필드가 있는지 확인하고 message_id 필드를 확인\n          if (msg.policies && msg.message_id) {\n            // 각 정책 항목의 format 일관성 확보 및 모든 상세 정보 포함\n            const formattedPolicies = msg.policies.map(policy => ({\n              // 필수 식별 필드\n              id: policy.id || policy.service_id || \"\",\n              // 원본 서비스ID 우선 사용\n              service_id: policy.service_id || policy.id || \"\",\n              // 서비스ID 필드 사용\n\n              // 기본 정보\n              title: policy.title || \"\",\n              content: policy.content || policy.description || \"\",\n              support_type: policy.support_type || \"\",\n              // 지원 대상 및 내용\n              eligibility: policy.eligibility || \"\",\n              benefits: policy.benefits || \"\",\n              selection_criteria: policy.selection_criteria || \"\",\n              // 신청 관련 정보\n              application_period: policy.application_period || \"\",\n              application_method: policy.application_method || \"\",\n              required_documents: policy.required_documents || \"\",\n              application_office: policy.application_office || \"\",\n              // 문의 및 법령 정보\n              contact_info: policy.contact_info || \"\",\n              legal_basis: policy.legal_basis || \"\",\n              administrative_rule: policy.administrative_rule || \"\",\n              // 추가: 행정규칙\n              local_law: policy.local_law || \"\",\n              // 추가: 자치법규\n\n              // 기관 및 상태 정보\n              responsible_agency: policy.responsible_agency || \"\",\n              // 추가: 소관기관명\n              last_updated: policy.last_updated || \"\",\n              // 추가: 수정일시\n\n              // 링크\n              online_application_url: policy.online_application_url || \"\"\n            }));\n            policiesData[msg.message_id] = formattedPolicies;\n          }\n        });\n        if (Object.keys(policiesData).length > 0) {\n          setPolicies(policiesData);\n        }\n      } else {\n        if (message) {\n          // 메시지를 처리하는 로직\n          console.log(\"처리할 메시지:\", message);\n          sendMessage(message);\n          dispatch(setMessage('')); // Redux 메시지 초기화\n        } else {\n          console.log(\"처리할 메시지 없음\");\n        }\n      }\n    }).catch(err => console.error(err));\n  }, [sessionId, message, dispatch]);\n\n  // 컴포넌트 마운트 시 사용자의 즐겨찾기 목록 가져오기\n  useEffect(() => {\n    fetchUserFavorites();\n  }, [userId]); // userId가 변경될 때마다 즐겨찾기 목록 다시 가져오기\n\n  // 사용자의 즐겨찾기 목록 가져오기\n  const fetchUserFavorites = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/favorites/${userId}`);\n      if (response.ok) {\n        const data = await response.json();\n        // 즐겨찾기된 정책 ID 목록 추출\n        const favoriteIds = data.map(fav => fav.policy_id);\n        setFavorites(favoriteIds);\n      }\n    } catch (error) {\n      console.error(\"즐겨찾기 목록 가져오기 오류:\", error);\n    }\n  };\n\n  // 즐겨찾기 추가/제거 함수\n  const toggleFavorite = async policyId => {\n    try {\n      if (favorites.includes(policyId)) {\n        // 즐겨찾기 제거\n        const response = await fetch(`http://localhost:8000/favorites/${userId}/${policyId}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          setFavorites(prev => prev.filter(id => id !== policyId));\n        }\n      } else {\n        // 즐겨찾기 추가\n        const response = await fetch('http://localhost:8000/favorites', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: userId,\n            policy_id: policyId\n          })\n        });\n        if (response.ok) {\n          setFavorites(prev => [...prev, policyId]);\n        }\n      }\n    } catch (error) {\n      console.error(\"즐겨찾기 토글 오류:\", error);\n    }\n  };\n\n  // WebSocket을 통한 메시지 전송 함수\n  const sendMessage = message => {\n    if (!message.trim()) return;\n\n    // 소켓이 없거나 준비되지 않은 경우 처리\n    if (!socket || socket.readyState !== WebSocket.OPEN) {\n      console.error('WebSocket이 연결되지 않았습니다');\n      alert('서버 연결이 끊어졌습니다. 페이지를 새로고침 해주세요.');\n      return;\n    }\n    try {\n      // 현재 시간 기록\n      const timestamp = new Date().toISOString();\n\n      // 임시 메시지 ID 생성\n      const tempId = `temp_${Date.now()}`;\n\n      // 메시지 UI에 먼저 추가 (낙관적 UI 업데이트)\n      const userMsg = {\n        message_id: tempId,\n        sender: 'user',\n        message: message,\n        timestamp: timestamp\n      };\n      setChatHistory(prev => [...prev, userMsg]);\n\n      // WebSocket을 통해 메시지 전송\n      socket.send(JSON.stringify({\n        message: message,\n        model: \"openchat\" // 또는 사용자가 선택한 모델\n      }));\n\n      // 메시지 입력창 초기화\n      setCurrentMessage('');\n\n      // 로딩 표시 (WebSocket 응답이 오기 전)\n      setIsLoading(true);\n    } catch (error) {\n      console.error('메시지 전송 오류:', error);\n      alert('메시지 전송 중 오류가 발생했습니다.');\n      setIsLoading(false);\n    }\n  };\n\n  // 전송 버튼 클릭 시 처리\n  const handleSend = () => {\n    if (!currentMessage.trim()) return;\n    sendMessage(currentMessage);\n  };\n  const localHandleMicrophoneClick = () => {\n    setIsRecording(prev => !prev);\n    handleMicrophoneClick(setCurrentMessage, setIsRecording);\n  };\n\n  // 새로운 메시지가 추가되면 스크롤을 자동으로 맨 아래로 이동\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatHistory, isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-container\",\n          children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 21\n          }, this), msg.sender === 'bot' && msg.message_id && policies[msg.message_id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-list-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uCD94\\uCC9C \\uC815\\uCC45 \\uBAA9\\uB85D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"policy-list\",\n              children: policies[msg.message_id].map((policy, pIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `policy-item ${policy.online_application_url ? 'clickable' : 'not-clickable'}`,\n                onClick: e => {\n                  if (policy.online_application_url) {\n                    window.open(policy.online_application_url, '_blank');\n                  }\n                },\n                \"data-index\": pIndex,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: policy.title || '정책명'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"favorite-button\",\n                    onClick: e => {\n                      e.stopPropagation(); // 이벤트 버블링 방지\n                      // service_id 또는 id를 우선 사용, title은 사용하지 않음\n                      const policyId = policy.service_id || policy.id;\n                      // ID가 존재하는 경우에만 즐겨찾기 토글 수행\n                      if (policyId) {\n                        toggleFavorite(policyId);\n                      } else {\n                        // ID가 없는 경우 알림 (선택적)\n                        console.warn(\"정책 ID가 없어 즐겨찾기를 저장할 수 없습니다.\");\n                      }\n                    },\n                    children: favorites.includes(policy.service_id) || favorites.includes(policy.id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"favorite-icon active\",\n                      children: \"\\u2605\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 37\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"favorite-icon\",\n                      children: \"\\u2606\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"policy-id\",\n                  style: {\n                    fontSize: '12px',\n                    color: '#777',\n                    marginTop: '2px',\n                    marginBottom: '5px'\n                  },\n                  children: [\"\\uC815\\uCC45 ID: \", policy.service_id || policy.id || '정보 없음']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"policy-content\",\n                  children: policy.content || '정책 설명'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 31\n                }, this), policy.eligibility && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-eligibility\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uC9C0\\uC6D0 \\uB300\\uC0C1:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 35\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-with-newlines\",\n                    children: policy.eligibility\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 55\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 33\n                }, this), policy.benefits && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-benefits\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uC9C0\\uC6D0 \\uB0B4\\uC6A9:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 35\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-with-newlines\",\n                    children: policy.benefits\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 55\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"detail-button\",\n                  onClick: e => {\n                    e.stopPropagation(); // 이벤트 버블링 방지\n                    setSelectedPolicy(policy);\n                    setShowDetailModal(true);\n                  },\n                  children: \"\\uC0C1\\uC138 \\uC815\\uBCF4 \\uBCF4\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 31\n                }, this)]\n              }, pIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot dot1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot dot2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot dot3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), showDetailModal && selectedPolicy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"policy-detail-modal-overlay\",\n      onClick: () => setShowDetailModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"policy-detail-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedPolicy.title || '정책 상세 정보'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close-btn\",\n            onClick: () => setShowDetailModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"policy-id\",\n            style: {\n              fontSize: '13px',\n              color: '#777',\n              marginTop: '0px',\n              marginBottom: '10px'\n            },\n            children: [\"\\uC815\\uCC45 ID: \", selectedPolicy.service_id || selectedPolicy.id || '정보 없음']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"policy-content text-with-newlines\",\n            children: selectedPolicy.content || '정책 설명'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), selectedPolicy.support_type && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-support-type\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uC720\\uD615:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.support_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this), selectedPolicy.eligibility && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-eligibility\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uB300\\uC0C1:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.eligibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, this), selectedPolicy.benefits && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-benefits\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC9C0\\uC6D0 \\uB0B4\\uC6A9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.benefits\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this), selectedPolicy.selection_criteria && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-selection-criteria\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC120\\uC815 \\uAE30\\uC900:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.selection_criteria\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this), selectedPolicy.application_period && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-period\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC2E0\\uCCAD \\uAE30\\uD55C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.application_period\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this), selectedPolicy.application_method && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-method\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC2E0\\uCCAD \\uBC29\\uBC95:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.application_method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, this), selectedPolicy.required_documents && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-required-documents\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uAD6C\\uBE44 \\uC11C\\uB958:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.required_documents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this), selectedPolicy.application_office && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-application-office\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC811\\uC218 \\uAE30\\uAD00:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.application_office\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this), selectedPolicy.contact_info && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-contact-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uBB38\\uC758\\uCC98:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.contact_info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 17\n          }, this), selectedPolicy.legal_basis && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-legal-basis\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uBC95\\uB839:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.legal_basis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this), selectedPolicy.administrative_rule && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-administrative-rule\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD589\\uC815\\uADDC\\uCE59:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.administrative_rule\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 17\n          }, this), selectedPolicy.local_law && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-local-law\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC790\\uCE58\\uBC95\\uADDC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.local_law\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 17\n          }, this), selectedPolicy.responsible_agency && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-responsible-agency\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC18C\\uAD00\\uAE30\\uAD00:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.responsible_agency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }, this), selectedPolicy.last_updated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"policy-last-updated\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC218\\uC815\\uC77C\\uC2DC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-with-newlines\",\n              children: selectedPolicy.last_updated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [selectedPolicy.online_application_url ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"apply-button\",\n              onClick: () => window.open(selectedPolicy.online_application_url, '_blank'),\n              children: \"\\uC628\\uB77C\\uC778 \\uC2E0\\uCCAD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-url-hint modal-hint\",\n              children: \"(\\uC628\\uB77C\\uC778 \\uC2E0\\uCCAD \\uBD88\\uAC00)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-button\",\n              onClick: () => setShowDetailModal(false),\n              children: \"\\uB2EB\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `input-container ${'chat-started'} ${isRecording ? 'recording' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC9C0\\uC6D0\\uAE08\\uC5D0 \\uB300\\uD574 \\uBB34\\uC5C7\\uC774\\uB4E0 \\uC9C8\\uBB38\\uD558\\uC138\\uC694!\",\n        value: currentMessage,\n        onChange: e => setCurrentMessage(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.nativeEvent.isComposing) {\n            e.preventDefault(); // 기본 동작(예: 폼 제출) 방지\n            if (!e.repeat) {\n              // 키 이벤트가 반복되지 않은 경우에만 처리\n              handleSend();\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `microphone-button ${isRecording ? 'recording' : ''}`,\n        onClick: localHandleMicrophoneClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatSessionDetail, \"LjilIql5+gVHAXl7EcFCWEB2dSE=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = ChatSessionDetail;\nexport default ChatSessionDetail;\nvar _c;\n$RefreshReg$(_c, \"ChatSessionDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","ReactMarkdown","useSelector","useDispatch","handleMicrophoneClick","setMessage","useAuthStore","jsxDEV","_jsxDEV","ChatSessionDetail","_s","sessionId","chatHistory","setChatHistory","currentMessage","setCurrentMessage","messagesEndRef","isRecording","setIsRecording","isLoading","setIsLoading","dispatch","message","state","policies","setPolicies","selectedPolicy","setSelectedPolicy","showDetailModal","setShowDetailModal","favorites","setFavorites","user","getState","userId","user_id","socket","setSocket","socketRef","current","close","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","type","some","msg","message_id","prev","sender","timestamp","filter","length","status","error","Date","now","toISOString","onerror","onclose","setTimeout","fetch","then","res","json","messages","sortedMessages","sort","a","b","localeCompare","policiesData","forEach","formattedPolicies","map","policy","id","service_id","title","content","description","support_type","eligibility","benefits","selection_criteria","application_period","application_method","required_documents","application_office","contact_info","legal_basis","administrative_rule","local_law","responsible_agency","last_updated","online_application_url","Object","keys","sendMessage","catch","err","fetchUserFavorites","response","ok","favoriteIds","fav","policy_id","toggleFavorite","policyId","includes","method","headers","body","stringify","trim","readyState","OPEN","alert","tempId","userMsg","send","model","handleSend","localHandleMicrophoneClick","_messagesEndRef$curre","scrollIntoView","behavior","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","pIndex","onClick","e","window","open","stopPropagation","warn","style","fontSize","color","marginTop","marginBottom","ref","placeholder","value","onChange","target","onKeyDown","key","nativeEvent","isComposing","preventDefault","repeat","_c","$RefreshReg$"],"sources":["/Users/jejinan/Desktop/sesac_final/Fundit_2_6/fronted/src/components/ChatBot/ChatSessionDetail.js"],"sourcesContent":["// ChatSessionDetail.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './ChatBot.css';\nimport { handleMicrophoneClick } from '../utils/microphoneHandler';\nimport { setMessage } from '../redux/messageSlice';\nimport useAuthStore from '../context/authStore';\n\nconst ChatSessionDetail = () => {\n  const { sessionId } = useParams(); // URL에서 sessionId를 추출합니다.\n  const [chatHistory, setChatHistory] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n  const dispatch = useDispatch();\n  const message = useSelector(state => state.message);\n  \n  // 정책 데이터를 저장할 상태 추가\n  const [policies, setPolicies] = useState({});\n  \n  // 상세 정보 모달을 위한 상태 추가\n  const [selectedPolicy, setSelectedPolicy] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n\n  // 즐겨찾기 상태 관리 \n  const [favorites, setFavorites] = useState([]);\n  // useAuthStore에서 사용자 정보 가져오기\n  const user = useAuthStore.getState().user;\n  const userId = user ? user.user_id : 'guest'; // 로그인 여부에 따라 실제 user_id 또는 'guest' 사용\n\n  // WebSocket 연결 상태 추가\n  const [socket, setSocket] = useState(null);\n  const socketRef = useRef(null);\n\n  // WebSocket 연결 설정\n  useEffect(() => {\n    // 이전 연결 정리\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n\n    // WebSocket 연결 생성\n    const ws = new WebSocket(`ws://localhost:8000/ws/${sessionId}`);\n    \n    // 연결 이벤트 핸들러\n    ws.onopen = () => {\n      console.log('WebSocket 연결 성공');\n      setSocket(ws);\n      socketRef.current = ws;\n    };\n    \n    // 메시지 수신 핸들러\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        console.log('WebSocket 메시지 수신:', data);\n        \n        // 메시지 타입에 따른 처리\n        switch (data.type) {\n          case 'user_message':\n            // 사용자 메시지 수신 - 이미 로컬에서 추가했을 수 있으므로 중복 확인\n            if (!chatHistory.some(msg => msg.message_id === data.message_id)) {\n              setChatHistory(prev => [...prev, {\n                message_id: data.message_id,\n                sender: data.sender,\n                message: data.message,\n                timestamp: data.timestamp\n              }]);\n            }\n            break;\n            \n          case 'bot_message':\n            // 봇 메시지 수신\n            setChatHistory(prev => [...prev.filter(msg => msg.sender !== 'loading'), {\n              message_id: data.message_id,\n              sender: data.sender,\n              message: data.message,\n              timestamp: data.timestamp\n            }]);\n            \n            // 정책 정보가 포함된 경우 저장\n            if (data.policies && data.policies.length > 0) {\n              setPolicies(prev => ({\n                ...prev,\n                [data.message_id]: data.policies\n              }));\n            }\n            \n            // 로딩 상태 종료\n            setIsLoading(false);\n            break;\n            \n          case 'typing':\n            // 타이핑/로딩 상태 처리\n            if (data.status === 'started') {\n              setIsLoading(true);\n            } else {\n              setIsLoading(false);\n            }\n            break;\n            \n          case 'error':\n            // 오류 메시지 처리\n            console.error('서버 오류:', data.message);\n            setChatHistory(prev => [...prev, {\n              message_id: `error_${Date.now()}`,\n              sender: 'bot',\n              message: data.message,\n              timestamp: new Date().toISOString()\n            }]);\n            setIsLoading(false);\n            break;\n            \n          default:\n            console.log('알 수 없는 메시지 타입:', data);\n        }\n      } catch (error) {\n        console.error('WebSocket 메시지 파싱 오류:', error);\n      }\n    };\n    \n    // 오류 핸들러\n    ws.onerror = (error) => {\n      console.error('WebSocket 오류:', error);\n    };\n    \n    // 연결 종료 핸들러\n    ws.onclose = () => {\n      console.log('WebSocket 연결 종료');\n      // 연결이 일시적으로 끊어진 경우 재연결 로직 (선택 사항)\n      setTimeout(() => {\n        if (socketRef.current === ws) {\n          console.log('WebSocket 재연결 시도...');\n          setSocket(null);\n        }\n      }, 3000);\n    };\n    \n    // 정리 함수\n    return () => {\n      console.log('WebSocket 연결 정리');\n      if (ws) {\n        ws.close();\n        socketRef.current = null;\n      }\n    };\n  }, [sessionId]); // sessionId가 변경되면 새로운 연결 설정\n\n  // 백엔드에서 해당 세션의 채팅 기록을 불러옵니다.\n  useEffect(() => {\n    console.log(\"채팅 기록 불러오기\");\n    fetch(`http://localhost:8000/sessions/${sessionId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.messages && data.messages.length > 0) {\n          // 타임스탬프와 sender에 따라 메시지를 정렬합니다.\n          console.log(\"메시지 기록 있음\");\n          const sortedMessages = data.messages.sort((a, b) => {\n            return a.timestamp.localeCompare(b.timestamp) || (a.sender === 'user' ? -1 : 1);\n          });\n\n          // 이미 백엔드에서 생성된 메시지 ID 사용\n          setChatHistory(sortedMessages);\n\n          // 정책 정보가 있는 메시지 찾기\n          const policiesData = {};\n          sortedMessages.forEach(msg => {\n            // policies 필드가 있는지 확인하고 message_id 필드를 확인\n            if (msg.policies && msg.message_id) {\n              // 각 정책 항목의 format 일관성 확보 및 모든 상세 정보 포함\n              const formattedPolicies = msg.policies.map(policy => ({\n                // 필수 식별 필드\n                id: policy.id || policy.service_id || \"\",  // 원본 서비스ID 우선 사용\n                service_id: policy.service_id || policy.id || \"\",  // 서비스ID 필드 사용\n                \n                // 기본 정보\n                title: policy.title || \"\",\n                content: policy.content || policy.description || \"\",\n                support_type: policy.support_type || \"\",\n                \n                // 지원 대상 및 내용\n                eligibility: policy.eligibility || \"\",\n                benefits: policy.benefits || \"\",\n                selection_criteria: policy.selection_criteria || \"\",\n                \n                // 신청 관련 정보\n                application_period: policy.application_period || \"\",\n                application_method: policy.application_method || \"\",\n                required_documents: policy.required_documents || \"\",\n                application_office: policy.application_office || \"\",\n                \n                // 문의 및 법령 정보\n                contact_info: policy.contact_info || \"\",\n                legal_basis: policy.legal_basis || \"\",\n                administrative_rule: policy.administrative_rule || \"\",  // 추가: 행정규칙\n                local_law: policy.local_law || \"\",  // 추가: 자치법규\n                \n                // 기관 및 상태 정보\n                responsible_agency: policy.responsible_agency || \"\",  // 추가: 소관기관명\n                last_updated: policy.last_updated || \"\",  // 추가: 수정일시\n                \n                // 링크\n                online_application_url: policy.online_application_url || \"\",\n  \n              }));\n              \n              policiesData[msg.message_id] = formattedPolicies;\n            }\n          });\n          \n          if (Object.keys(policiesData).length > 0) {\n            setPolicies(policiesData);\n          }\n        } \n        else {\n          if (message) {\n            // 메시지를 처리하는 로직\n            console.log(\"처리할 메시지:\", message);\n            sendMessage(message);\n            dispatch(setMessage('')); // Redux 메시지 초기화\n          }\n          else {\n            console.log(\"처리할 메시지 없음\");\n          }\n        } \n      })\n      .catch((err) => console.error(err));\n  }, [sessionId, message, dispatch]);\n\n  // 컴포넌트 마운트 시 사용자의 즐겨찾기 목록 가져오기\n  useEffect(() => {\n    fetchUserFavorites();\n  }, [userId]); // userId가 변경될 때마다 즐겨찾기 목록 다시 가져오기\n\n  // 사용자의 즐겨찾기 목록 가져오기\n  const fetchUserFavorites = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/favorites/${userId}`);\n      if (response.ok) {\n        const data = await response.json();\n        // 즐겨찾기된 정책 ID 목록 추출\n        const favoriteIds = data.map(fav => fav.policy_id);\n        setFavorites(favoriteIds);\n      }\n    } catch (error) {\n      console.error(\"즐겨찾기 목록 가져오기 오류:\", error);\n    }\n  };\n\n  // 즐겨찾기 추가/제거 함수\n  const toggleFavorite = async (policyId) => {\n    try {\n      if (favorites.includes(policyId)) {\n        // 즐겨찾기 제거\n        const response = await fetch(`http://localhost:8000/favorites/${userId}/${policyId}`, {\n          method: 'DELETE'\n        });\n        \n        if (response.ok) {\n          setFavorites(prev => prev.filter(id => id !== policyId));\n        }\n      } else {\n        // 즐겨찾기 추가\n        const response = await fetch('http://localhost:8000/favorites', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: userId,\n            policy_id: policyId\n          })\n        });\n        \n        if (response.ok) {\n          setFavorites(prev => [...prev, policyId]);\n        }\n      }\n    } catch (error) {\n      console.error(\"즐겨찾기 토글 오류:\", error);\n    }\n  };\n\n  // WebSocket을 통한 메시지 전송 함수\n  const sendMessage = (message) => {\n    if (!message.trim()) return;\n    \n    // 소켓이 없거나 준비되지 않은 경우 처리\n    if (!socket || socket.readyState !== WebSocket.OPEN) {\n      console.error('WebSocket이 연결되지 않았습니다');\n      alert('서버 연결이 끊어졌습니다. 페이지를 새로고침 해주세요.');\n      return;\n    }\n    \n    try {\n      // 현재 시간 기록\n      const timestamp = new Date().toISOString();\n      \n      // 임시 메시지 ID 생성\n      const tempId = `temp_${Date.now()}`;\n      \n      // 메시지 UI에 먼저 추가 (낙관적 UI 업데이트)\n      const userMsg = {\n        message_id: tempId,\n        sender: 'user',\n        message: message,\n        timestamp: timestamp\n      };\n      \n      setChatHistory(prev => [...prev, userMsg]);\n      \n      // WebSocket을 통해 메시지 전송\n      socket.send(JSON.stringify({\n        message: message,\n        model: \"openchat\" // 또는 사용자가 선택한 모델\n      }));\n      \n      // 메시지 입력창 초기화\n      setCurrentMessage('');\n      \n      // 로딩 표시 (WebSocket 응답이 오기 전)\n      setIsLoading(true);\n    } catch (error) {\n      console.error('메시지 전송 오류:', error);\n      alert('메시지 전송 중 오류가 발생했습니다.');\n      setIsLoading(false);\n    }\n  };\n  \n  // 전송 버튼 클릭 시 처리\n  const handleSend = () => {\n    if (!currentMessage.trim()) return;\n    sendMessage(currentMessage);\n  };\n\n  const localHandleMicrophoneClick = () => {\n    setIsRecording(prev => !prev);\n    handleMicrophoneClick(setCurrentMessage, setIsRecording);\n  };\n\n  // 새로운 메시지가 추가되면 스크롤을 자동으로 맨 아래로 이동\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [chatHistory, isLoading]);\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"messages\">\n        {chatHistory.map((msg, index) => (\n            <div key={index} className={`message ${msg.sender}`}>\n                <div className=\"message-container\">\n                    <ReactMarkdown>{msg.message}</ReactMarkdown>\n                    \n                    {/* 봇 메시지이고 정책 목록이 있을 경우 정책 목록 UI 표시 */}\n                    {msg.sender === 'bot' && msg.message_id && policies[msg.message_id] && (\n                      <div className=\"policy-list-container\">\n                        <h4>추천 정책 목록</h4>\n                        <div className=\"policy-list\">\n                          {policies[msg.message_id].map((policy, pIndex) => (\n                            <div \n                              key={pIndex} \n                              className={`policy-item ${policy.online_application_url ? 'clickable' : 'not-clickable'}`}\n                              onClick={(e) => {\n                                if (policy.online_application_url) {\n                                  window.open(policy.online_application_url, '_blank');\n                                }\n                              }}\n                              data-index={pIndex}\n                            >\n                              <div className=\"policy-header\">\n                                <h5>{policy.title || '정책명'}</h5>\n                                <button \n                                  className=\"favorite-button\" \n                                  onClick={(e) => {\n                                    e.stopPropagation(); // 이벤트 버블링 방지\n                                    // service_id 또는 id를 우선 사용, title은 사용하지 않음\n                                    const policyId = policy.service_id || policy.id;\n                                    // ID가 존재하는 경우에만 즐겨찾기 토글 수행\n                                    if (policyId) {\n                                      toggleFavorite(policyId);\n                                    } else {\n                                      // ID가 없는 경우 알림 (선택적)\n                                      console.warn(\"정책 ID가 없어 즐겨찾기를 저장할 수 없습니다.\");\n                                    }\n                                  }}\n                                >\n                                  {favorites.includes(policy.service_id) || favorites.includes(policy.id) ? \n                                    <span className=\"favorite-icon active\">★</span> : \n                                    <span className=\"favorite-icon\">☆</span>\n                                  }\n                                </button>\n                              </div>\n                              <p className=\"policy-id\" style={{ fontSize: '12px', color: '#777', marginTop: '2px', marginBottom: '5px' }}>\n                                정책 ID: {policy.service_id || policy.id || '정보 없음'}\n                              </p>\n                              <p className=\"policy-content\">{policy.content || '정책 설명'}</p>\n                              {policy.eligibility && (\n                                <div className=\"policy-eligibility\">\n                                  <span>지원 대상:</span> <span className=\"text-with-newlines\">{policy.eligibility}</span>\n                                </div>\n                              )}\n                              {policy.benefits && (\n                                <div className=\"policy-benefits\">\n                                  <span>지원 내용:</span> <span className=\"text-with-newlines\">{policy.benefits}</span>\n                                </div>\n                              )}\n                              \n                              <button \n                                className=\"detail-button\"\n                                onClick={(e) => {\n                                  e.stopPropagation(); // 이벤트 버블링 방지\n                                  setSelectedPolicy(policy);\n                                  setShowDetailModal(true);\n                                }}\n                              >\n                                상세 정보 보기\n                              </button>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                </div>\n            </div>\n        ))}\n        {isLoading && (\n          <div className=\"message bot loading\">\n            <div className=\"message-container\">\n              <div className=\"loading-indicator\">\n                <div className=\"dot dot1\"></div>\n                <div className=\"dot dot2\"></div>\n                <div className=\"dot dot3\"></div>\n              </div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* 상세 정보 모달 */}\n      {showDetailModal && selectedPolicy && (\n        <div className=\"policy-detail-modal-overlay\" onClick={() => setShowDetailModal(false)}>\n          <div className=\"policy-detail-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>{selectedPolicy.title || '정책 상세 정보'}</h3>\n              <button className=\"modal-close-btn\" onClick={() => setShowDetailModal(false)}>×</button>\n            </div>\n            <div className=\"modal-content\">\n              <p className=\"policy-id\" style={{ fontSize: '13px', color: '#777', marginTop: '0px', marginBottom: '10px' }}>\n                정책 ID: {selectedPolicy.service_id || selectedPolicy.id || '정보 없음'}\n              </p>\n              <p className=\"policy-content text-with-newlines\">{selectedPolicy.content || '정책 설명'}</p>\n              \n              {selectedPolicy.support_type && (\n                <div className=\"policy-support-type\">\n                  <span>지원 유형:</span> <span className=\"text-with-newlines\">{selectedPolicy.support_type}</span>\n                </div>\n              )}\n              {selectedPolicy.eligibility && (\n                <div className=\"policy-eligibility\">\n                  <span>지원 대상:</span> <span className=\"text-with-newlines\">{selectedPolicy.eligibility}</span>\n                </div>\n              )}\n              {selectedPolicy.benefits && (\n                <div className=\"policy-benefits\">\n                  <span>지원 내용:</span> <span className=\"text-with-newlines\">{selectedPolicy.benefits}</span>\n                </div>\n              )}\n              {selectedPolicy.selection_criteria && (\n                <div className=\"policy-selection-criteria\">\n                  <span>선정 기준:</span> <span className=\"text-with-newlines\">{selectedPolicy.selection_criteria}</span>\n                </div>\n              )}\n              {selectedPolicy.application_period && (\n                <div className=\"policy-application-period\">\n                  <span>신청 기한:</span> <span className=\"text-with-newlines\">{selectedPolicy.application_period}</span>\n                </div>\n              )}\n              {selectedPolicy.application_method && (\n                <div className=\"policy-application-method\">\n                  <span>신청 방법:</span> <span className=\"text-with-newlines\">{selectedPolicy.application_method}</span>\n                </div>\n              )}\n              {selectedPolicy.required_documents && (\n                <div className=\"policy-required-documents\">\n                  <span>구비 서류:</span> <span className=\"text-with-newlines\">{selectedPolicy.required_documents}</span>\n                </div>\n              )}\n              {selectedPolicy.application_office && (\n                <div className=\"policy-application-office\">\n                  <span>접수 기관:</span> <span className=\"text-with-newlines\">{selectedPolicy.application_office}</span>\n                </div>\n              )}\n              {selectedPolicy.contact_info && (\n                <div className=\"policy-contact-info\">\n                  <span>문의처:</span> <span className=\"text-with-newlines\">{selectedPolicy.contact_info}</span>\n                </div>\n              )}\n              {selectedPolicy.legal_basis && (\n                <div className=\"policy-legal-basis\">\n                  <span>법령:</span> <span className=\"text-with-newlines\">{selectedPolicy.legal_basis}</span>\n                </div>\n              )}\n              {/* 새로 추가된 필드들 */}\n              {selectedPolicy.administrative_rule && (\n                <div className=\"policy-administrative-rule\">\n                  <span>행정규칙:</span> <span className=\"text-with-newlines\">{selectedPolicy.administrative_rule}</span>\n                </div>\n              )}\n              {selectedPolicy.local_law && (\n                <div className=\"policy-local-law\">\n                  <span>자치법규:</span> <span className=\"text-with-newlines\">{selectedPolicy.local_law}</span>\n                </div>\n              )}\n              {selectedPolicy.responsible_agency && (\n                <div className=\"policy-responsible-agency\">\n                  <span>소관기관:</span> <span className=\"text-with-newlines\">{selectedPolicy.responsible_agency}</span>\n                </div>\n              )}\n              {selectedPolicy.last_updated && (\n                <div className=\"policy-last-updated\">\n                  <span>수정일시:</span> <span className=\"text-with-newlines\">{selectedPolicy.last_updated}</span>\n                </div>\n              )}\n              \n              <div className=\"modal-footer\">\n                {selectedPolicy.online_application_url ? (\n                  <button \n                    className=\"apply-button\"\n                    onClick={() => window.open(selectedPolicy.online_application_url, '_blank')}\n                  >\n                    온라인 신청하기\n                  </button>\n                ) : (\n                  <p className=\"no-url-hint modal-hint\">(온라인 신청 불가)</p>\n                )}\n                <button \n                  className=\"close-button\"\n                  onClick={() => setShowDetailModal(false)}\n                >\n                  닫기\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className={`input-container ${'chat-started'} ${isRecording ? 'recording' : ''}`}>\n        <input\n          type=\"text\"\n          placeholder=\"지원금에 대해 무엇이든 질문하세요!\"\n          value={currentMessage}\n          onChange={(e) => setCurrentMessage(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && !e.nativeEvent.isComposing) {\n              e.preventDefault(); // 기본 동작(예: 폼 제출) 방지\n              if (!e.repeat) {    // 키 이벤트가 반복되지 않은 경우에만 처리\n                handleSend();\n              }\n            }\n          }}\n        />\n        <button className=\"send-button\" onClick={handleSend}>전송</button>\n        <button \n          className={`microphone-button ${isRecording ? 'recording' : ''}`} \n          onClick={localHandleMicrophoneClick}\n        ></button>      \n      </div>\n    </div>\n  );\n};\n\nexport default ChatSessionDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}